{"version":3,"file":"uat-bearbones.umd.js.map","sources":["ng://@uat/bearbones/lib/alternating-panel/alternating-panel.tokens.ts","ng://@uat/bearbones/lib/alternating-panel/alternating-panel.component.ts","ng://@uat/bearbones/lib/animation-states/state-css-mapper/state-css-mapper.service.ts","ng://@uat/bearbones/lib/animation-states/animation-states.service.ts","ng://@uat/bearbones/lib/alternating-panel/alternating-panel.directive.ts","ng://@uat/bearbones/lib/animation-states/animation-states.module.ts","ng://@uat/bearbones/lib/alternating-panel/alternating-panel.module.ts","ng://@uat/bearbones/lib/sliding-panel/sliding-panel.enums.ts","ng://@uat/bearbones/lib/sliding-panel/sliding-panel.animations.ts","ng://@uat/bearbones/lib/sliding-panel/sliding-panel.component.ts","ng://@uat/bearbones/lib/sliding-panel/toggle/sliding-panel-toggle.directive.ts","ng://@uat/bearbones/lib/sliding-panel/sliding-panel.module.ts","ng://@uat/bearbones/lib/dropdown-menu/dropdown-menu.component.ts","ng://@uat/bearbones/lib/dropdown-menu/dropdown-menu.module.ts","ng://@uat/bearbones/lib/slideout-menu/slideout-menu.component.ts","ng://@uat/bearbones/lib/slideout-menu/slideout-menu.module.ts","ng://@uat/bearbones/lib/dropdown-input/dropdown-input.component.ts","ng://@uat/bearbones/lib/dropdown-input/dropdown-input.directive.ts","ng://@uat/bearbones/lib/dynamic-component/dynamic-component.directive.ts","ng://@uat/bearbones/lib/dynamic-component/dynamic-component.module.ts","ng://@uat/bearbones/lib/dropdown-input/item-list/dropdown-input-item-list.component.ts","ng://@uat/bearbones/lib/dropdown-input/dropdown-input.module.ts","ng://@uat/bearbones/lib/common/menu-item.directive.ts","ng://@uat/bearbones/lib/hamburger-menu/menu-item-right.directive.ts","ng://@uat/bearbones/lib/hamburger-menu/hamburger-menu.component.ts","ng://@uat/bearbones/lib/common/common.module.ts","ng://@uat/bearbones/lib/hamburger-menu/hamburger-menu.module.ts","ng://@uat/bearbones/lib/collapsing-menu/collapsing-menu.component.ts","ng://@uat/bearbones/lib/collapsing-menu/collapsing-menu.module.ts","ng://@uat/bearbones/lib/multi-select/multi-select.component.ts","ng://@uat/bearbones/lib/multi-select/multi-select.module.ts","ng://@uat/bearbones/lib/common/close-subscription.ts","ng://@uat/bearbones/lib/drag-and-drop-component/dnd.const.ts","ng://@uat/bearbones/lib/drag-and-drop-component/drag-and-drop.service.ts","ng://@uat/bearbones/lib/drag-and-drop-component/draggable/draggable.directive.ts","ng://@uat/bearbones/lib/drag-and-drop-component/drag-and-drop-container/drag-and-drop-container.component.ts","ng://@uat/bearbones/lib/drag-and-drop-component/drag-and-drop.module.ts","ng://@uat/bearbones/lib/tab/tab.service.ts","ng://@uat/bearbones/lib/tab/tab.directive.ts","ng://@uat/bearbones/lib/tab/tab-content.directive.ts","ng://@uat/bearbones/lib/tab/tab.module.ts","ng://@uat/bearbones/lib/drag-and-drop/drag-and-drop.service.ts","ng://@uat/bearbones/lib/drag-and-drop/dropper.directive.ts","ng://@uat/bearbones/lib/drag-and-drop/drop-zone.directive.ts","ng://@uat/bearbones/lib/drag-and-drop/drag-and-drop.module.ts","ng://@uat/bearbones/lib/sortable/sortable.directive.ts","ng://@uat/bearbones/lib/sortable/sortable.module.ts","ng://@uat/bearbones/lib/bear-bones.module.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\nimport { AnimationMetadata } from \"@angular/animations\";\r\n\r\n/**\r\n * Provides the animation to play when the panel transitions \r\n * from state 2 to state 1.\r\n */\r\nexport const AltPanelState1Animation = \r\n  new InjectionToken<AnimationMetadata|AnimationMetadata[]>('BB_ALT_PANEL_STATE_1_ANIMATION');\r\n\r\n  /**\r\n   * Provides the animation to play when the panel transitions \r\n   * from state 1 to state 2.\r\n   */\r\nexport const AltPanelState2Animation = \r\n  new InjectionToken<AnimationMetadata|AnimationMetadata[]>('BB_ALT_PANEL_STATE_2_ANIMATION');\r\n","import { Component, OnInit, Inject, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { AnimationBuilder, AnimationMetadata, AnimationPlayer, AnimationEvent, animate, style } from '@angular/animations';\nimport { AlternatingPanelCSSClasses } from './alternating-panel.css-model';\nimport { AltPanelState1Animation, AltPanelState2Animation } from './alternating-panel.tokens';\n\n/**\n * \n */\n@Component({\n  selector: '[bb-alt-panel]',\n  template: `<ng-content></ng-content>`,\n  styles: [``],\n  animations: [],\n  exportAs: 'bbAltPanel',\n})\nexport class BBAlternatingPanelComponent implements OnInit {\n\n  /**\n   * Defintes the css classes the panel will use.\n   */\n  @Input() css: AlternatingPanelCSSClasses;\n\n  /**\n   * Save the animation to play when\n   * transitioning from state 2 to state 1.\n   */\n  private state1Player: AnimationPlayer;\n\n  /**\n   * Save the animation to play when\n   * transitioning from state 1 to state 2.\n   */\n  private state2Player: AnimationPlayer;\n\n  /**\n   * Store the current panel state for determining \n   * the next transition.\n   */\n  private panelStateCache  = 'init';\n\n  /**\n   * Determine the transition to make when\n   * the state changes.\n   * \n   * If the state is transitioned back to init\n   * or the transition is unrecognized then play \n   * no animation and remove either state\n   * css class that was applied. \n   */\n  private set panelState(state: 'init' | 'state1' | 'state2') {\n    if(state !== this.panelStateCache) {\n      if(this.panelStateCache !== 'init') {\n        if(this.panelStateCache === 'state2' && state === 'state1') {\n          this.transitionToState1();\n        }        \n        else if(this.panelStateCache === 'state1' && state === 'state2') {\n          this.transitionToState2();\n        } \n        else {\n          this.clearCSSStateClasses();\n        }\n        \n      }\n      else {\n        if(state === 'state1') {\n          this.renderer.addClass(this.elRef.nativeElement,this.css.state1);\n        }\n        else if(state === 'state2') {\n          this.renderer.addClass(this.elRef.nativeElement,this.css.state2);\n        }\n      }\n      this.panelStateCache = state;\n    }\n    \n  };\n\n  constructor(\n    private elRef: ElementRef,\n    private renderer: Renderer2,\n    private aBuilder: AnimationBuilder,\n    @Inject(AltPanelState1Animation)\n    private state1Animation: AnimationMetadata | AnimationMetadata[],\n    @Inject(AltPanelState2Animation)\n    private state2Animation: AnimationMetadata | AnimationMetadata[],\n  ) { }\n\n  ngOnInit() {\n    this.buildAnimations();\n\n    console.log(`css: ${JSON.stringify(this.css)}`);\n\n    console.log(`states: ${this.css.state1} & ${this.css.state2}`);\n\n    this.renderer.addClass(this.elRef.nativeElement,this.css.panel);\n\n    this.toggle('state1');\n  }\n\n  /**\n   * Transition the panel to the next state.  If no\n   * next state is passed in the order will be:\n   * \n   * init -> state1 -> state2 -> state1 -> state2...\n   * \n   * @param state The next state to transition to.\n   */\n  toggle(state?: string) {\n    console.log('toggling');\n    state = state || this.panelStateCache;\n    switch(state) {\n      case 'init': {\n        this.panelState = 'state1';\n        break;\n      }\n      case 'state1': {\n        this.panelState = 'state2';\n        break;\n      }\n      case 'state2': {\n        this.panelState = 'state1';\n        break;\n      }\n    }\n  }\n\n  /**\n   * Build the animations injected through the tokens \n   * to play when transitions happen.\n   */\n  private buildAnimations() {\n    this.state1Player = \n      this.aBuilder.build(this.state1Animation)\n        .create(this.elRef.nativeElement);\n\n    this.state2Player = \n      this.aBuilder.build(this.state2Animation)\n        .create(this.elRef.nativeElement);\n  }\n\n  /**\n   * Transition to state 1, removing the state 2 css class  \n   * if it exists, play the animation, and set the state 1 \n   * css class.\n   */\n  private transitionToState1() {\n    this.renderer.removeClass(this.elRef.nativeElement,this.css.state2);\n    this.renderer.addClass(this.elRef.nativeElement,this.css.state1);\n    if(this.state2Player) { this.state2Player.reset(); }\n    this.state1Player.play();\n  }\n\n  /**\n   * Transition to state 2, removing the state 1 css class  \n   * if it exists, play the animation, and set the state 2 \n   * css class.\n   */\n  private transitionToState2() {\n    this.renderer.removeClass(this.elRef.nativeElement,this.css.state1);\n    this.renderer.addClass(this.elRef.nativeElement,this.css.state2);\n    if(this.state1Player) { this.state1Player.reset(); }\n    this.state2Player.play();      \n  }\n\n  /**\n   * Clear both the state 1 and state 2 css classes if they exist.\n   */\n  private clearCSSStateClasses() {\n    this.renderer.removeClass(this.elRef.nativeElement,this.css.state1);\n    this.renderer.removeClass(this.elRef.nativeElement,this.css.state2);\n  }\n}\n","import { Injectable, RendererFactory2 } from '@angular/core';\nimport { BBStateCSSMap } from './state-css-mapper.model';\n\n@Injectable()\nexport class BBStateCssMapperService {\n\n  getCSSClass(state:string, map: BBStateCSSMap) {\n    return map && map[state];\n  }\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  createStateCSSMapper(element: any, map: BBStateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return <BBStateCSSMapper>{\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\nexport interface BBStateCSSMapper {\n  remove: (state:string)=>void;\n  removeAll: ()=>void;\n  add: (state:string)=> void;\n  destroy: ()=> void;\n}\n","import { Injectable, RendererFactory2 } from '@angular/core';\nimport { AnimationPlayer, AnimationBuilder } from '@angular/animations';\nimport { BBAnimationTransitions } from './animation-transitions.model';\nimport { BBAnimationPlayers } from './animation-players.model';\nimport { BBStateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { BBAnimationStateMachine } from './animation-state-machine.model';\nimport { BBStateCSSMapper } from './state-css-mapper/state-css-mapper.service';\n\n/**\n * \n */\n@Injectable()\nexport class BBAnimationStatesService {\n  constructor(\n    private builder: AnimationBuilder,\n    private cssMapper: BBStateCssMapperService,\n    private rendererFactory: RendererFactory2,\n  ) {}\n\n  /**\n   * \n   * @param element The element to apply the animations to.\n   * @param transitions The map of state transition animations for the element.\n   */\n  buildPlayers(\n    element: any, \n    transitions: BBAnimationTransitions) {\n\n    return Object.keys(transitions).reduce<BBAnimationPlayers>(\n      (players,fromState)=>{\n        players[fromState] = Object.keys(transitions[fromState])\n          .reduce<{[toState:string]: AnimationPlayer}>(\n            (prev,toState)=>{\n              const player = this.builder\n                .build(transitions[fromState][toState])\n                .create(element);\n              prev[toState] = player; \n              return prev;\n            },{});\n      return players;\n    },{});\n  }\n\n  onAnimationStart = (\n    state: string, \n    mapper: BBStateCSSMapper = null) => () => {\n      if(mapper) {\n        mapper.remove(state);\n      }\n  }\n\n  onAnimationDone = (\n    state: string, \n    mapper: BBStateCSSMapper = null) => () => {\n      if(mapper) {\n        mapper.add(state);\n      }\n  }\n\n  /**\n   * \n   * @param fromState \n   * @param toState \n   * @param players \n   */\n  getPlayer(\n    fromState: string, \n    toState: string, \n    players: BBAnimationPlayers) {\n      return players && \n        players[fromState] && \n        players[fromState][toState];\n  }\n\n  /**\n   * \n   * @param players \n   */\n  destroyAllPlayers(players: BBAnimationPlayers) {\n    if(players) {\n      Object.keys(players).forEach(fromState=>{\n        Object.keys(players[fromState]).forEach(toState=>{\n          players[fromState][toState].destroy();\n        })\n      });\n    }\n  }\n\n  /**\n   * \n   * @param element \n   * @param transitions \n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: BBAnimationTransitions = {}) {\n\n    let players = this.buildPlayers(element, transitions);\n    let currentState: string = '';\n    let currentPlayer: AnimationPlayer;\n\n    return <BBAnimationStateMachine> {\n        init: (state:string, mapper: BBStateCSSMapper = null)=> { \n          currentState = state;\n\n          if(mapper) {\n            mapper.add(currentState);\n          }\n        },\n\n        next: (nextState: string, mapper: BBStateCSSMapper = null) => {\n          if(currentState !== nextState) {\n\n            const newPlayer = this.getPlayer(currentState, nextState,players);\n\n            if(currentPlayer) {\n              currentPlayer.reset();\n            }\n\n            if(newPlayer) {\n              currentPlayer = newPlayer;\n\n              /*\n               * Reseting the player clears the callbacks\n               * so reregister them each time before playing.\n               */\n              currentPlayer.onStart(\n                this.onAnimationStart(currentState,mapper));\n              currentPlayer.onDone(\n                this.onAnimationDone(nextState,mapper));\n\n              currentPlayer.play();\n            } \n            /*\n             * In case an animation isn't defined for\n             * the transition but a css class is handle\n             * that by explicitly swapping out  the css \n             * classes when the transition player doesn't \n             * exist.\n             */\n            else {\n              if(mapper) {\n                mapper.remove(currentState);\n                mapper.add(nextState); \n              }\n            } \n\n            currentState = nextState;\n          }\n          return currentState;\n        },\n\n        destroy: ()=> {\n          this.destroyAllPlayers(players);\n          currentPlayer = null;\n          currentState = null;\n          currentPlayer = null;\n          players = null;\n        }\n    } \n\n  }\n}\n\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { BBAnimationStatesService } from '../animation-states/animation-states.service';\nimport { BBAnimationTransitions } from '../animation-states/animation-transitions.model';\nimport { BBAnimationStateMachine } from '../animation-states/animation-state-machine.model';\nimport { BBStateCSSMap } from '../animation-states/state-css-mapper/state-css-mapper.model';\nimport { BBStateCssMapperService, BBStateCSSMapper } from '../animation-states/state-css-mapper/state-css-mapper.service';\n\n@Directive({\n  selector: '[bbAlternatingPanel]'\n})\nexport class BBAlternatingPanelDirective {\n\n  private animationsStateMachine: BBAnimationStateMachine;\n  private cssMapper: BBStateCSSMapper;\n\n  private stateCache: string;\n  private mapCache: BBStateCSSMap;\n  private transitionsCache: BBAnimationTransitions;\n  /**\n   * Defintes the css classes the panel will use.\n   */\n  @Input() set css (map: BBStateCSSMap) {\n    if(this.mapCache != map) {\n      this.mapCache = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService.createStateCSSMapper(\n        this.elRef.nativeElement,\n        this.mapCache);\n    }\n  }\n\n  @Input() set state(toState:string) {\n    if(this.stateCache != toState) {\n      this.stateCache = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(this.stateCache, this.cssMapper);\n      }\n    }\n  }\n\n  @Input() set transitions(transitions: BBAnimationTransitions) {\n    if(this.transitionsCache != transitions) {\n      this.transitionsCache = transitions;\n\n      if(this.animationsStateMachine) {\n\n        if(this.cssMapper) {\n          this.cssMapper.removeAll();\n        }\n\n        this.animationsStateMachine.destroy();\n      }    \n\n      this.animationsStateMachine = \n        this.bbBuilder\n          .createAnimationStateMachine(\n            this.elRef.nativeElement,\n            this.transitionsCache);\n    }\n  }\n\n  constructor(\n    private elRef: ElementRef,\n    private renderer: Renderer2,\n    private bbBuilder: BBAnimationStatesService,\n    private cssMapperService: BBStateCssMapperService\n  ) { }\n\n  ngOnInit() {  \n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.init(this.stateCache,this.cssMapper);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BBAnimationStatesService } from './animation-states.service';\nimport { BBStateCssMapperService } from './state-css-mapper/state-css-mapper.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: []\n})\nexport class BBAnimationStatesModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBAnimationStatesModule,\n      providers: [BBAnimationStatesService, BBStateCssMapperService]\n    };\n  }  \n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BBAlternatingPanelComponent } from './alternating-panel.component';\nimport { BBAlternatingPanelDirective } from './alternating-panel.directive';\nimport { BBAnimationStatesModule } from '../animation-states/animation-states.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BBAnimationStatesModule.forRoot(),\n  ],\n  \n  declarations: [\n    BBAlternatingPanelComponent,\n    BBAlternatingPanelDirective, \n  ],\n\n  exports: [\n    BBAlternatingPanelComponent,\n    BBAlternatingPanelDirective\n  ]\n})\nexport class BBAlternatingPanelModule { \n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBAlternatingPanelModule,\n      providers: []\n    };\n  }  \n}\n","export enum SlideAnimationDirections {\r\n    CLOSE = 'close',\r\n    SLIDE_LEFT = 'slide-left',\r\n    SLIDE_RIGHT = 'slide-right',\r\n    SLIDE_UP = 'slide-up',\r\n    SLIDE_DOWN = 'slide-down',\r\n}\r\n\r\nexport enum SlideDirections {\r\n    LEFT = 'left',\r\n    RIGHT = 'right',\r\n    UP = 'up',\r\n    DOWN = 'down',\r\n}","import { animation, trigger, state, style, transition, group, animate } from \"@angular/animations\";\r\nimport { AnimationMetadata } from '@angular/animations';\r\nimport { SlideAnimationDirections } from \"./sliding-panel.enums\";\r\n\r\nexport function verticalSlideAnimations(): AnimationMetadata  {\r\n    return trigger('verticalTrigger', [\r\n        state(SlideAnimationDirections.CLOSE, style({\r\n            transform: 'scaleY(0)', \r\n        })),\r\n        state(SlideAnimationDirections.SLIDE_DOWN, style({\r\n            transform: 'scaleY(1)', \r\n        })),\r\n        state(SlideAnimationDirections.SLIDE_UP, style({\r\n            transform: 'scaleY(1)', \r\n        })),\r\n        transition(\r\n                /*\r\n                SlideDirections.CLOSE + \r\n                ' => ' + \r\n                SlideDirections.SLIDE_DOWN, \r\n                */\r\n                `${SlideAnimationDirections.CLOSE} => ${SlideAnimationDirections.SLIDE_DOWN}`, \r\n                [\r\n            style({ \r\n                transform: 'scaleY(0)', \r\n                'transform-origin': 'top' \r\n            }),\r\n            animate('150ms ease-in', \r\n                style({ \r\n                    transform: 'scaleY(1)', \r\n                    'transform-origin': 'top' \r\n            })),\r\n        ]),\r\n        transition(\r\n            `${SlideAnimationDirections.SLIDE_DOWN} => ${SlideAnimationDirections.CLOSE}`,\r\n            /*\r\n                SlideDirections.SLIDE_DOWN + \r\n                ' => ' + \r\n                SlideDirections.CLOSE, \r\n            */\r\n            [\r\n            style({ \r\n                transform: 'scaleY(1)', \r\n                'transform-origin': 'top' \r\n            }),\r\n            animate('150ms ease-out', \r\n                style({ \r\n                    transform: 'scaleY(0)', \r\n                    'transform-origin': 'top' \r\n            \r\n            })),\r\n        ]),\r\n        transition(\r\n            SlideAnimationDirections.CLOSE + \r\n            ' => ' + \r\n            SlideAnimationDirections.SLIDE_UP, [\r\n            style({ \r\n                transform: 'scaleY(0)', \r\n                'transform-origin': 'bottom' \r\n            }),\r\n            animate('150ms ease-in', \r\n                style({ \r\n                    transform: 'scaleY(1)', \r\n                    'transform-origin': 'bottom' \r\n            })),\r\n        ]),\r\n        transition(\r\n            SlideAnimationDirections.SLIDE_UP + \r\n            ' => ' + \r\n            SlideAnimationDirections.CLOSE, [\r\n            style({ \r\n                transform: 'scaleY(1)', \r\n                'transform-origin': 'bottom' \r\n            }),\r\n            animate('150ms ease-out', \r\n                style({ \r\n                    transform: 'scaleY(0)', \r\n                    'transform-origin': 'bottom' \r\n            \r\n            })),\r\n        ])\r\n        \r\n    ]);\r\n}\r\n\r\nexport function horizontalSlideAnimations(): AnimationMetadata  {\r\n    return trigger('horizontalTrigger', [\r\n        state(SlideAnimationDirections.CLOSE, style({\r\n            transform: 'scaleX(0)', \r\n        })),\r\n        state(SlideAnimationDirections.SLIDE_RIGHT, style({\r\n            transform: 'scaleX(1)', \r\n        })),\r\n        state(SlideAnimationDirections.SLIDE_LEFT, style({\r\n            transform: 'scaleX(1)', \r\n        })),\r\n        transition(\r\n            SlideAnimationDirections.CLOSE + \r\n            ' => ' + \r\n            SlideAnimationDirections.SLIDE_RIGHT, [\r\n            style({ \r\n                transform: 'scaleX(0)', \r\n                'transform-origin': 'left' \r\n            }),\r\n            animate('150ms ease-in', \r\n                style({ \r\n                    transform: 'scaleX(1)', \r\n                    'transform-origin': 'left' \r\n            })),\r\n        ]),\r\n        transition(\r\n            SlideAnimationDirections.SLIDE_RIGHT + \r\n            ' => ' + \r\n            SlideAnimationDirections.CLOSE, [\r\n            style({ \r\n                transform: 'scaleX(1)', \r\n                'transform-origin': 'left' \r\n            }),\r\n            animate('150ms ease-out', \r\n                style({ \r\n                    transform: 'scaleX(0)', \r\n                    'transform-origin': 'left' \r\n            \r\n            })),\r\n        ]),\r\n        transition(\r\n            SlideAnimationDirections.CLOSE + \r\n            ' => ' + \r\n            SlideAnimationDirections.SLIDE_LEFT, [\r\n            style({ \r\n                transform: 'scaleX(0)', \r\n                'transform-origin': 'right' \r\n            }),\r\n            animate('150ms ease-in', \r\n                style({ \r\n                    transform: 'scaleX(1)', \r\n                    'transform-origin': 'right' \r\n            })),\r\n        ]),\r\n        transition(\r\n            SlideAnimationDirections.SLIDE_LEFT + \r\n            ' => ' + \r\n            SlideAnimationDirections.CLOSE, [\r\n            style({ \r\n                transform: 'scaleX(1)', \r\n                'transform-origin': 'right' \r\n            }),\r\n            animate('150ms ease-out', \r\n                style({ \r\n                    transform: 'scaleX(0)', \r\n                    'transform-origin': 'right' \r\n            \r\n            })),\r\n        ])\r\n        \r\n    ]);\r\n}\r\n","import { \r\n  Component, \r\n  Input, \r\n  Output, \r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  HostListener,\r\n  NgZone,\r\n  HostBinding,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  keyframes,\r\n  animate,\r\n  group\r\n} from '@angular/animations';\r\n\r\nimport { \r\n  verticalSlideAnimations, \r\n  horizontalSlideAnimations } from './sliding-panel.animations';\r\nimport { SlideAnimationDirections, SlideDirections } from './sliding-panel.enums';\r\n\r\n\r\n\r\n/**\r\n * A sliding panel is a div element that can be \r\n * set to slide up, down, left, or right.\r\n * \r\n * It can be tied to a slidiing panel toggle\r\n * or can be shown or hidden by calling the\r\n * public members show, hide, or toggle. \r\n */\r\n@Component({\r\n  selector: 'div[bb-sliding-panel]',\r\n  template: `<ng-content></ng-content>`,\r\n  styles: [``],\r\n  host: {\r\n    '[@horizontalTrigger]':'horizontalState',\r\n    '[@verticalTrigger]':'verticalState',\r\n    '[class.open]':'isShowing',\r\n    '[class.closed]':'!isShowing',\r\n    '[class.pinned]':'pinned',\r\n    '(mouseenter)':'mouseEnterPanel.emit($event)',\r\n    '(mouseleave)':'mouseLeavePanel.emit($event)',\r\n    '(mouseover)':'mouseOverPanel.emit($event)',\r\n    '(click)':'clickPanel.emit($event)',\r\n    '[class.bb-sliding-panel]':\"'true'\"\r\n  },\r\n  animations: [\r\n    verticalSlideAnimations(), \r\n    horizontalSlideAnimations(),\r\n  ],\r\n  exportAs: 'bbSlidingPanel',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BBSlidingPanel {\r\n  /**\r\n   * Specify the direction of the panels sliding animation.\r\n   * Valid values: 'up', 'down', 'left', or 'right'\r\n   */\r\n  @Input() slideDirection: SlideDirections = SlideDirections.DOWN;\r\n\r\n  /**\r\n   * Event for when the mouse enters the panel.\r\n   */\r\n  @Output() mouseEnterPanel= new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * Event for when the mouse leaves the panel.\r\n   */\r\n  @Output() mouseLeavePanel= new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * Event for when the mouse is over the panel.\r\n   */\r\n  @Output() mouseOverPanel= new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * Event for when the panel is clicked.\r\n   */\r\n  @Output() clickPanel= new EventEmitter<MouseEvent>();\r\n\r\n  public pinned = false;\r\n\r\n\r\n  /**\r\n   * Trigger for the horizontal animations.\r\n   */\r\n  horizontalState : SlideAnimationDirections = SlideAnimationDirections.CLOSE;\r\n\r\n  /**\r\n   * Trigger for the vertical animations.\r\n   */\r\n  verticalState : SlideAnimationDirections = SlideAnimationDirections.CLOSE;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) { }\r\n\r\n  /**\r\n   * Returns whether the panel is open or closed.\r\n   */\r\n  public get isShowing() {\r\n    return (this.horizontalState !== SlideAnimationDirections.CLOSE ||\r\n        this.verticalState !== SlideAnimationDirections.CLOSE);\r\n  }\r\n\r\n  /**\r\n   * Show the panel with a sliding animation.\r\n   */\r\n  public show() {\r\n    switch(this.slideDirection) {\r\n      case SlideDirections.LEFT: {\r\n        this.horizontalState = SlideAnimationDirections.SLIDE_LEFT;\r\n        break;\r\n      }\r\n      case SlideDirections.RIGHT: {\r\n        this.horizontalState = SlideAnimationDirections.SLIDE_RIGHT;\r\n        break;\r\n      }\r\n      case SlideDirections.UP: {\r\n        this.verticalState = SlideAnimationDirections.SLIDE_UP;\r\n        break;\r\n      }\r\n      case SlideDirections.DOWN: {\r\n        this.verticalState = SlideAnimationDirections.SLIDE_DOWN;\r\n        break;\r\n      }\r\n      default: {\r\n        this.horizontalState = SlideAnimationDirections.CLOSE;\r\n        this.verticalState = SlideAnimationDirections.CLOSE;\r\n        break;\r\n      }\r\n    }\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Hide the panel with a sliding animation.\r\n   */\r\n  public hide() {\r\n    this.horizontalState = SlideAnimationDirections.CLOSE;\r\n    this.verticalState = SlideAnimationDirections.CLOSE;\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Toggle the panel state with a sliding animation.\r\n   */\r\n  public toggle() {\r\n    if(this.isShowing){\r\n      this.hide();\r\n    }\r\n    else{\r\n      this.show();\r\n    }\r\n  }\r\n\r\n}\r\n","import { \r\n  Directive, \r\n  Input, \r\n  HostListener, \r\n  HostBinding, \r\n  NgZone, \r\n  ElementRef, \r\n  OnInit,\r\n  OnDestroy,\r\n  AfterViewInit} from '@angular/core';\r\nimport { BBSlidingPanel } from '../sliding-panel.component';\r\nimport { Observable ,  Subscription ,  fromEvent ,  of } from 'rxjs';\r\nimport { filter ,  combineLatest ,  merge ,  map ,  debounceTime } from 'rxjs/operators';\r\n\r\n/**\r\n * Control a sliding panels shown or hidden state.\r\n * \r\n * Should only be attached to elements that have\r\n * a click event.\r\n */\r\n@Directive({\r\n  selector: '[bb-sliding-panel-toggle]',\r\n  host: {\r\n    '[class.open]':'panel.isShowing',\r\n    '[class.closed]':'!panel.isShowing',\r\n    '[class.pinned]':'panel.pinned',\r\n    '[class.bb-sliding-panel-toggle]':\"'true'\"\r\n  },\r\n  exportAs:'bbSlidingPanelToggle'\r\n})\r\nexport class BBSlidingPanelToggle implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * The panel that the toggle is attached to.\r\n   * \r\n   * If this value is not set an error will be \r\n   * thrown during init.\r\n   */\r\n  @Input('bb-sliding-panel-toggle') panel: BBSlidingPanel;\r\n\r\n  /**\r\n   * Controls whether the panel should open based \r\n   * on a click event or not.\r\n   */\r\n  @Input() toggleOnClick = false;\r\n\r\n  /**\r\n   * Controls whether the panel should open \r\n   * on mouse over or not.\r\n   */\r\n  @Input() showOnHover = false;\r\n\r\n  /**\r\n   * Controls whether the panel should close When\r\n   * clicked outside the toggle or panel or not.\r\n   */\r\n  @Input() closeOnClickOutside = false;\r\n\r\n  /**\r\n   * Sets the initial state of the panel \r\n   * by pinning open it if true.\r\n   */\r\n  @Input() showOnInit: boolean;\r\n\r\n  /**\r\n   * Keep track of the previous pin state.\r\n   * This is needed to determine if the \r\n   * new pin state should actually cause a\r\n   * transition or not.\r\n   */\r\n  private previousPinnedState: boolean = false;\r\n  \r\n  /**\r\n   * Save he subscription so the stream\r\n   * can be properly closed.\r\n   */\r\n  private showHideSubscription: Subscription;\r\n\r\n  constructor(private element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(!this.panel){\r\n      throw new Error('No SlidingPanel component supplied to ' + \r\n                      'the bb-sliding-panel-toggle directive ' + \r\n                      '([bb-sliding-panel-toggle]=\"$PanelVariable\").');\r\n    }\r\n\r\n    if(this.showHideSubscription && !this.showHideSubscription.closed) {\r\n      this.showHideSubscription.unsubscribe();\r\n    }\r\n\r\n    /*\r\n     * Streams of the events necessary \r\n     * for the logic of the toggle.\r\n     */\r\n\r\n    let documentClick$ = fromEvent<MouseEvent>(document, 'click');\r\n    \r\n    let toggleClick$ = fromEvent<MouseEvent>(this.element.nativeElement, 'click');\r\n    let toggleMouseEnter$ = fromEvent<MouseEvent>(this.element.nativeElement, 'mouseenter');\r\n    let toggleMouseLeave$ = fromEvent<MouseEvent>(this.element.nativeElement, 'mouseleave');\r\n\r\n    let panelMouseEntered$ = this.panel.mouseEnterPanel.asObservable();\r\n    let panelMouseLeft$ = this.panel.mouseLeavePanel.asObservable();\r\n    let panelClick$ = this.panel.clickPanel.asObservable();\r\n\r\n    /*\r\n     * Reduce both leaving events to \r\n     * a false emission.\r\n     */\r\n    let leaveBoth$ = toggleMouseLeave$\r\n      .pipe(\r\n        merge(panelMouseLeft$),\r\n        filter(_=>this.showOnHover), \r\n        map(_=>false));\r\n\r\n    /*\r\n     * Reduce both enter events to \r\n     * a true emission.\r\n     */\r\n    let enterEither$ = toggleMouseEnter$\r\n      .pipe(\r\n        merge(panelMouseEntered$),\r\n        filter(_=>this.showOnHover),\r\n        map(_=>true));\r\n\r\n    /*\r\n     * When the toggle is clicked \r\n     * stop the event from bubbling\r\n     * and toggle the pinned state.\r\n     */\r\n    let toggleClicked$ = toggleClick$\r\n      .pipe(\r\n        map(_=> {\r\n          /*\r\n           * should probably be done with\r\n           * a do operator, once it works again,\r\n           * for both toggle clicked and panel\r\n           * clicked\r\n           */\r\n          event.stopPropagation();\r\n          return !this.previousPinnedState }));\r\n\r\n    /*\r\n     * When the panel is clicked\r\n     * stop the event from bubbling\r\n     * and just continue to emit the\r\n     * previous pinned state.\r\n     */\r\n    let panelClicked$ = panelClick$\r\n      .pipe(map(_=>{\r\n        event.stopPropagation();\r\n        return this.previousPinnedState }));\r\n\r\n    /*\r\n     * A document click is only\r\n     * triggered when the panel\r\n     * and the toggle don't prevent\r\n     * the bubbling so just emit \r\n     * false as the next pinned state.\r\n     */\r\n    let documentClicked$ = documentClick$\r\n      .pipe(\r\n        filter(_=>this.closeOnClickOutside),\r\n        map(_=>false));\r\n    \r\n    /*\r\n     * Combine all the pinned state\r\n     * streams.\r\n     */\r\n    let nextPinnedState$ = of(this.showOnInit)\r\n      .pipe(\r\n        merge(toggleClicked$, panelClicked$, documentClicked$));\r\n\r\n    /*\r\n     * Combine all the mouse movement\r\n     * streams.\r\n     */\r\n    let isHovering$ = of(false)\r\n      .pipe(\r\n        merge(leaveBoth$, enterEither$),\r\n        /*\r\n          * 50 here is arbitrary but \r\n          * seems to be below the \r\n          * human threshhold for noticing\r\n          * the delay while letting \r\n          * slower systems have plenty of\r\n          * time to process the events.\r\n          * \r\n          * Maybe it should be configurable?\r\n          */\r\n        debounceTime(50));\r\n\r\n    /*\r\n     * Combine the hover and pinned state\r\n     * streams into a stream that determines\r\n     * whether the panel state needs to change.\r\n     */\r\n    this.showHideSubscription = \r\n      isHovering$\r\n        .pipe(\r\n          combineLatest(nextPinnedState$),\r\n          map(states=>({hover:states[0],pin:states[1] })))\r\n        .subscribe(this.onNextState);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.showHideSubscription && !this.showHideSubscription.closed) {\r\n      this.showHideSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  showPanel = () => this.onNextState({hover: false, pin: true});\r\n  hidePanel = () => this.onNextState({hover: false, pin: false});\r\n\r\n  /**\r\n   * Determine what the next panel state\r\n   * should be based on the new hover and\r\n   * pin states.\r\n   */\r\n  private onNextState = (nextStates:{hover: boolean, pin: boolean}) => {\r\n    if(nextStates.hover ) {\r\n      if(this.previousPinnedState && !nextStates.pin) { \r\n        this.panel.hide();  \r\n      }\r\n      else {\r\n        this.panel.show();\r\n      }\r\n    }\r\n    else {\r\n      if(!this.previousPinnedState && nextStates.pin) {\r\n        this.panel.show();\r\n      }\r\n      else if(!nextStates.pin){\r\n        this.panel.hide();\r\n      }\r\n    }\r\n    this.previousPinnedState = nextStates.pin;\r\n    this.panel.pinned = nextStates.pin;\r\n  }\r\n\r\n  \r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BBSlidingPanel } from './sliding-panel.component';\r\nimport { BBSlidingPanelToggle } from './toggle/sliding-panel-toggle.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  \r\n  declarations: [\r\n    BBSlidingPanel, \r\n    BBSlidingPanelToggle, \r\n  ],\r\n\r\n  exports: [\r\n    BBSlidingPanel, \r\n    BBSlidingPanelToggle,\r\n  ]\r\n})\r\nexport class BBSlidingPanelModule { \r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBSlidingPanelModule,\r\n      providers: []\r\n    };\r\n  }  \r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Renderer,\r\n  ViewChild,\r\n  ElementRef,\r\n  ContentChildren,\r\n  HostBinding } from '@angular/core';\r\nimport {BBMenuItem} from '../common/menu-item.directive';\r\nimport { BBSlidingPanel } from '../sliding-panel/sliding-panel.component';\r\n\r\n@Component({\r\n  selector: 'div[bb-dropdown-menu]',\r\n  template: `<div [bb-sliding-panel-toggle]=\"panel\" \r\n     [toggleOnClick]=\"toggleOnClick\"\r\n     [showOnHover]=\"showOnHover\"\r\n     [closeOnClickOutside]=\"closeOnClickOutside\">\r\n    <ng-content select=\"[bb-menu-toggle]\"></ng-content>\r\n</div>\r\n<div class=\"dropdown-container\">\r\n  <div bb-sliding-panel \r\n    #panel=\"bbSlidingPanel\"\r\n    slideDirection=\"down\">\r\n    <ng-content select=\"[bb-menu-item]\"></ng-content>\r\n  </div>\r\n</div>`,\r\n  styles: [`div.dropdown-container{position:relative}/deep/ .dropdown-container>div.bb-sliding-panel{position:absolute;top:0}.dropdown-container div.bb-sliding-panel{display:flex;flex:1;flex-direction:column}`],\r\n  exportAs:'bbDropdownMenu'\r\n})\r\nexport class BBDropdownMenu {\r\n  @HostBinding('class.bb-dropdown-menu') applyHostClass = true;\r\n\r\n  @Input() public showOnHover = false;\r\n  @Input() public toggleOnClick = true;\r\n  @Input() public closeOnClickOutside = true;\r\n\r\n  @ViewChild('panel') panel: BBSlidingPanel;\r\n\r\n  public get isOpen() {\r\n    return this.panel.isShowing;\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBDropdownMenu } from './dropdown-menu.component';\r\nimport { BBSlidingPanelModule } from '../sliding-panel/sliding-panel.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BBSlidingPanelModule\r\n  ],\r\n  \r\n  declarations: [\r\n    BBDropdownMenu\r\n  ],\r\n  \r\n  exports: [\r\n\t  BBDropdownMenu\r\n  ]\r\n})\r\nexport class BBDropdownMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBDropdownMenuModule,\r\n      providers: []\r\n    };\r\n  }\r\n }\r\n","import { Component, Input, HostBinding, ViewChild } from '@angular/core';\r\nimport { BBSlidingPanel } from '../sliding-panel/sliding-panel.component';\r\n\r\n@Component({\r\n  selector: 'div[bb-slideout-menu]',\r\n  template: `<div class=\"slide-container\">\r\n  <div [bb-sliding-panel-toggle]=\"panel\" \r\n    [toggleOnClick]=\"pinOnClick\"\r\n    [showOnHover]=\"showOnMouseOver\"\r\n    [closeOnClickOutside]=\"closeOnClickOutside\">\r\n    <ng-content select=\"[bb-menu-toggle]\"></ng-content>\r\n  </div>\r\n  <div class=\"slide-position\">\r\n    <div class=\"slide-anchor\">\r\n      <div bb-sliding-panel \r\n        #panel=\"bbSlidingPanel\"\r\n        [slideDirection]=\"slideDirection\">\r\n          <ng-content select=\"[bb-menu-item]\"></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>`,\r\n  styles: [`div.slide-container{position:relative}.slide-container>div.slide-position{position:absolute;top:0}/deep/ .slide-left>div.slide-container{background-color:red}/deep/ .slide-left div.slide-position{left:0}/deep/ .slide-right div.slide-position{right:0}.slide-container>>div.slide-anchor{position:relative}/deep/ .slide-anchor>div.bb-sliding-panel{position:absolute;display:flex;flex-direction:row;flex:1}/deep/ .slide-left div.bb-sliding-panel{right:0}/deep/ .slide-right div.bb-sliding-panel{left:0}`],\r\n  host: {\r\n    '[class.slide-left]':\"slideLeft\",\r\n    '[class.slide-right]':\"!slideLeft\"\r\n  }\r\n})\r\nexport class BBSlideoutMenu {\r\n  @HostBinding('class.bb-slideout-menu') applyHostClass = true;\r\n\r\n  @Input() public showOnMouseOver = true;\r\n  @Input() public pinOnClick = true;\r\n  @Input() public closeOnClickOutside = true;\r\n  @Input() slideDirection: \"left\" | \"right\" = \"right\";\r\n\r\n  @ViewChild('panel') panel: BBSlidingPanel;\r\n\r\n  public get isOpen() {\r\n    return this.panel.isShowing;\r\n  }\r\n\r\n  get slideLeft() {\r\n    return this.slideDirection === \"left\";\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBSlideoutMenu } from './slideout-menu.component';\r\nimport { BBSlidingPanelModule } from '../sliding-panel/sliding-panel.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BBSlidingPanelModule,\r\n  ],\r\n  \r\n  declarations: [\r\n    BBSlideoutMenu\r\n  ],\r\n  \r\n  exports: [\r\n\t  BBSlideoutMenu\r\n  ]\r\n})\r\nexport class BBSlideoutMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBSlideoutMenuModule,\r\n      providers: []\r\n    };\r\n  }  \r\n}\r\n","import { \r\n  Component, \r\n  Input,\r\n  Output,\r\n  Inject,\r\n  forwardRef,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  InjectionToken,\r\n  HostListener,\r\n  HostBinding,\r\n  ViewChild  \r\n      } from '@angular/core';\r\n\r\nimport { Observable ,  Subscription ,  BehaviorSubject ,  fromEvent } from 'rxjs';\r\nimport { debounceTime ,  map ,  distinctUntilChanged } from 'rxjs/operators';\r\nimport { BBSlidingPanel } from '../sliding-panel/sliding-panel.component';\r\nimport { BBDropdownInputItemsList } from './item-list/dropdown-input-item-list.component';\r\nimport { BBDynamicComponentDirective } from '../dynamic-component/dynamic-component.directive';\r\nimport { DropdownInputService } from './service/dropdown-input-service.interface';\r\nimport { DropdownInputItemChosenEvent, DropdownInputItemsMouseEvent } from './events/dropdown-input-item-events.interface';\r\n\r\nexport const BBDropdownInputServiceToken = new InjectionToken<DropdownInputService>('DdIService');\r\n\r\n@Component({\r\n  selector: 'div[bb-dropdown-input]',\r\n  template: `<div class=\"dropdown-anchor\">\r\n  <input #dropdownInput\r\n\t\t (keydown)=\"onKeyDown($event)\"\r\n\t\t [attr.placeholder]=\"placeholderText\"/>\r\n  \t<div bb-sliding-panel\r\n\t     class=\"results\" \r\n\t\t slideDirection=\"down\"\r\n\t\t #panel=\"bbSlidingPanel\">\r\n\t\t <ul bb-dropdown-input-items-list\r\n\t\t \t#dropdownList\r\n\t\t    [dynamicComponentsData]=\"diServ.items$ | async\"\r\n\t\t\t(listItemMouseOver)=\"onListItemMouseOver($event)\"\r\n\t\t\t(listItemClick)=\"onListItemClicked($event)\"\r\n\t\t\t(newContainers)=\"onNewItemContainers($event)\">\r\n\t\t </ul>\r\n  \t</div>\t\r\n</div>\r\n`,\r\n  styles: [`div.dropdown-anchor{position:relative}.dropdown-anchor>div.bb-sliding-panel{position:absolute}.dropdown-anchor>.bb-sliding-panel ul.bb-dropdown-input-items-list{display:flex;flex:1;flex-direction:column;padding-left:0;list-style:none}`],\r\n  host: {\r\n    '(focusout)':\"onHostFocusOut($event)\",\r\n    '(focusin)':\"onHostFocusIn($event)\",\r\n  },\r\n  exportAs:'bbDropdownInput',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BBDropdownInput {\r\n  @HostBinding('class.bb-dropdown-input') applyHostClass = true;\r\n\r\n  /**\r\n   * Set maximum number of items for the service.\r\n   */\r\n  @Input() maxItems: number;\r\n\r\n  /**\r\n   * Toggles whether the displayText should be set into the input\r\n   * box when an item is 'chosen'.  Defaults to true. \r\n   */\r\n  @Input() setTextOnChoice = true;\r\n\r\n  /**\r\n   * Set the place holder text on the input element.\r\n   */\r\n  @Input() placeholderText = '';\r\n\r\n  /**\r\n   * Sets how long, in ms, the delay is \r\n   * between updates to the DropdownInputService\r\n   * when the value of the input element\r\n   * has been changed.\r\n   * \r\n   * Defaults to 400ms.\r\n   */\r\n  @Input() public inputValueChangeDelayms = 400;\r\n\r\n  /**\r\n   * The auto selection mode determine which item will be selected if the\r\n   * choose item method is executed when no item has been specifically\r\n   * selected by user interaction.\r\n   * \r\n   * 'none'    - nothing is chosen without user interaction\r\n   *  \r\n   * 'lazy'    - the first item in the list is chosen\r\n   *  \r\n   * 'exact'   - if any item's displayText matches the input exactly,\r\n   *             ignoring case, the first match is chosen\r\n   * \r\n   * 'only'    - if there is only a single item in the list it is chosen\r\n   * \r\n   * 'partial' - math the first item in the list that, ignoring case, \r\n   *             exactly matches the current value\r\n   */\r\n  @Input() autoSelectionMode: 'none' | 'lazy' | 'exact' | 'only' | 'partial' = 'none'; \r\n\r\n  /**\r\n   * The index of the auto selection mode selection made.\r\n   */\r\n  private autoSelectedIndex = -1;\r\n\r\n  private selectedIndex = -1;\r\n\r\n  /**\r\n   * Emit the data for the list item selected either through \r\n   * a mouse click or hitting enter when it is in the selected \r\n   * state.\r\n   */\r\n  @Output() listItemChosen = new EventEmitter<DropdownInputItemChosenEvent>();\r\n\r\n  /**\r\n   * Return true if the service has returned\r\n   * at least 1 item to the component.\r\n   */\r\n  public get hasItems() {\r\n      return this.numItems > 0;\r\n  }\r\n\r\n  public get isOpen() {\r\n    return this.panel.isShowing;\r\n  }\r\n\r\n  @ViewChild('dropdownInput', {read: ElementRef}) inputElementRef: ElementRef;\r\n  @ViewChild('panel', {read: ElementRef}) panelElementRef: ElementRef;\r\n\r\n  @ViewChild('panel') panel: BBSlidingPanel;\r\n  @ViewChild('dropdownList') list: BBDropdownInputItemsList;\r\n\r\n  public get inputElement() {\r\n    return (this.inputElementRef.nativeElement as HTMLInputElement);\r\n  }\r\n\r\n  // determine the location of clicks\r\n  // to determine if the dropdown should\r\n  // show or not.\r\n  private outsideClick = new EventEmitter();\r\n  private insideClick = new EventEmitter();\r\n\r\n  private clickedInside = new BehaviorSubject(false);\r\n\r\n  /* user interaction state tracking */\r\n  private wasInsideClicked = false;\r\n  private wasFocused = false;\r\n\r\n  // for tracking the state of the panel\r\n  private inputSub: Subscription;\r\n\r\n  private itemsSub: Subscription;\r\n  private numItems: number = 0;\r\n\r\n  /*\r\n   * Internal list of the dynamic components' containers.\r\n   */\r\n  private dynamicContainers: BBDynamicComponentDirective[];\r\n\r\n  public diServ: DropdownInputService;\r\n\r\n  constructor(\r\n    @Inject(forwardRef(()=>BBDropdownInputServiceToken)) private _diServ: DropdownInputService,\r\n    private ele: ElementRef,\r\n    private chDetRef: ChangeDetectorRef) {\r\n      this.diServ = _diServ;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if(this.maxItems) {\r\n      this.diServ.setMaxItems(this.maxItems);\r\n    }\r\n\r\n    /*\r\n     * Track the value changes of the input element\r\n     * without bringing in angular forms to keep\r\n     * the requirements for bb as low as possible.\r\n     */\r\n    this.inputSub = \r\n      fromEvent(this.inputElement, 'keyup')\r\n        .pipe(\r\n          map((event:KeyboardEvent)=>(event.target as HTMLInputElement).value),\r\n          debounceTime(this.inputValueChangeDelayms),\r\n          distinctUntilChanged())\r\n        .subscribe(\r\n            newText=>{\r\n              this.diServ.setSearchText(newText);\r\n            },\r\n        err=>console.log(err),\r\n        ()=>{/*done*/});\r\n\r\n    this.itemsSub = this.diServ.items$\r\n      .pipe(\r\n        map(items=> items? items.length:-1))\r\n      .subscribe(\r\n        num=> {\r\n          this.numItems = num;\r\n\r\n          if(this.hasItems){\r\n            this.panel.show();\r\n          }\r\n          else {\r\n            this.panel.hide();\r\n          }\r\n          this.chDetRef.markForCheck();\r\n          this.chDetRef.detectChanges();\r\n        },\r\n        err=>console.log(err),\r\n        ()=>{/*done*/});\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.inputSub.unsubscribe();\r\n    this.itemsSub.unsubscribe();\r\n    this.diServ.clearItems();\r\n  }\r\n\r\n  /**\r\n   * Clear any previous selection criteria and\r\n   * perform a new auto selection.\r\n   */\r\n   onNewItemContainers(\r\n    containers: BBDynamicComponentDirective[]) {\r\n      this.clearAutoSelection();\r\n      this.clearSelection();\r\n      this.dynamicContainers = containers;\r\n      if(this.dynamicContainers && this.dynamicContainers.length > 0){\r\n        this.autoSelectItem();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Choose either the currently selected item or\r\n   * the auto chosen item and emit it.\r\n   */\r\n  private chooseCurrentItem() {\r\n      let currentItem: DropdownInputItemChosenEvent;\r\n      if (this.selectedIndex >= 0) {\r\n            currentItem = this.getCurrentItem(this.selectedIndex);\r\n      }\r\n      else {\r\n          if (this.autoSelectedIndex >= 0) {\r\n            currentItem = this.getCurrentItem(this.autoSelectedIndex);\r\n          }\r\n      }\r\n\r\n      if(currentItem){\r\n        if (this.setTextOnChoice) {\r\n          this.inputElement.value = currentItem.matchText;\r\n        }\r\n\r\n        this.listItemChosen.emit(currentItem);\r\n        this.clearSelection();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Return a data structure of the dynamic component\r\n   * described by the index value.\r\n   */\r\n  private getCurrentItem(index: number): DropdownInputItemChosenEvent {\r\n    return {\r\n      component: this.dynamicContainers[index].currentCompRef.instance,\r\n      index: index,\r\n      matchText: this.list.dynamicComponentsData[index].matchText,\r\n    }\r\n  }\r\n\r\n  /* Soft Selection Handling */\r\n  private autoSelectItem() {\r\n    let index = -1;\r\n    switch (this.autoSelectionMode) {\r\n        case 'none': {\r\n            // do nothing\r\n            break;\r\n        }\r\n        case 'lazy': {\r\n            if (this.dynamicContainers) {\r\n                index = 0;\r\n            }\r\n            break;\r\n        }\r\n        case 'exact': {\r\n          if (this.dynamicContainers) {\r\n            let containerIndex = -1;\r\n\r\n            this.list.dynamicComponentsData.find(\r\n            (cnt,i) => {\r\n              if (cnt.matchText.toLowerCase() === \r\n                this.inputElement.value.toLowerCase()) {\r\n                containerIndex = i;\r\n                return true;\r\n              }\r\n            });\r\n            if (containerIndex >= 0) {\r\n                index = containerIndex;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'partial': {\r\n          if (this.dynamicContainers) {\r\n            let containerIndex = -1;\r\n\r\n            this.list.dynamicComponentsData.find(\r\n            (cnt,i) => {\r\n              if (cnt.matchText.toLowerCase()\r\n                  .substr(0,\r\n                    this.inputElement.value.length) === \r\n                  this.inputElement.value.toLowerCase()) {\r\n                containerIndex = i;\r\n                return true;\r\n              }\r\n            });\r\n            if (containerIndex >= 0) {\r\n                index = containerIndex;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'only': {\r\n            if (this.dynamicContainers && this.dynamicContainers.length === 1) {\r\n                index = 0;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (index != this.autoSelectedIndex) {\r\n      this.clearAutoSelection();\r\n\r\n      if (index >= 0) {\r\n        this.list.changeAutoSelection(index, true);\r\n      }\r\n      this.autoSelectedIndex = index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear current auto selection\r\n   */\r\n  private clearAutoSelection() {\r\n    if (this.autoSelectedIndex >= 0) {\r\n      this.list.changeAutoSelection(this.autoSelectedIndex, false);\r\n      this.autoSelectedIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select previous, wrapping\r\n   */\r\n  private selectPreviousListItem(e: KeyboardEvent) {\r\n    this.getNextSelection(-1);\r\n    \r\n  }\r\n\r\n  /**\r\n   * Select next, wrapping\r\n   */\r\n  private selectNextListItem(e: KeyboardEvent) {\r\n    this.getNextSelection(1);\r\n  }\r\n\r\n  /**\r\n   * Get the next selection based on the indexChange\r\n   * and wrapping around the array of items.\r\n   */\r\n  private getNextSelection(indexChange:number) {\r\n    if (this.dynamicContainers && this.dynamicContainers.length > 0) {\r\n        this.list.changeSelection(this.selectedIndex, false);\r\n\r\n        // move selection index\r\n        this.selectedIndex += indexChange;\r\n\r\n        // wrap the selection\r\n        if (this.selectedIndex < 0) {\r\n            this.selectedIndex = this.dynamicContainers.length - 1;\r\n        }\r\n        else if (this.selectedIndex >= this.dynamicContainers.length) {\r\n            this.selectedIndex = 0;\r\n        }\r\n\r\n        // set the selection\r\n        this.list.changeSelection(this.selectedIndex, true);\r\n\r\n        // the container element is considered to be the angular binding comment, so we have to go up 1 level to the li element\r\n        const listElement = this.list.listElements[this.selectedIndex];\r\n        const containerElement = (this.panelElementRef.nativeElement as HTMLDivElement);\r\n\r\n        // check if item is in view\r\n        const inViewData = this.elementOffsetFromView(listElement, containerElement);\r\n        if (!inViewData.inView) {\r\n            containerElement.scrollTop += inViewData.scrollBy;\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear current selection\r\n   */\r\n  private clearSelection() {\r\n    if (this.selectedIndex >= 0) {\r\n      this.list.changeSelection(this.selectedIndex, false);\r\n      this.selectedIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if an element is within the view of the container element\r\n   * and if it isn't also determine the vertical offset from being in view\r\n   * it is at.\r\n   * @param listElement the element to determine if it is in view\r\n   * @param container the viewing container of the element\r\n   */\r\n  private elementOffsetFromView(listElement: HTMLElement, container: HTMLElement) {\r\n      const listRec = listElement.getBoundingClientRect();\r\n      const contRec = container.getBoundingClientRect();\r\n      const topViz = listRec.top >= contRec.top;\r\n      const botViz = listRec.bottom <= contRec.bottom;\r\n\r\n      const inViewData = {\r\n          inView: topViz && botViz,\r\n          scrollBy: 0 \r\n      }\r\n\r\n      if (!botViz) {\r\n          inViewData.scrollBy = listRec.bottom - contRec.bottom;\r\n      }\r\n      else if (!topViz) {\r\n          inViewData.scrollBy = -(contRec.top - listRec.top);\r\n      }\r\n      \r\n      return inViewData;\r\n  }\r\n\r\n\r\n  /* Event Handlers */\r\n\r\n  /**\r\n   * Read for extra control keys pressed, up and down arrows and enter,\r\n   * and take the appropriate action based on them.\r\n   * Up Arrow - select the previous item on the list, or the last item if none has been selected yet\r\n   * Down Arrow - select the next item on the list, or the first if none has been selected \r\n   * Enter - 'choose' the currently selected item\r\n   * @param e\r\n   */\r\n   onKeyDown(e: KeyboardEvent) {\r\n      switch (e.keyCode) {\r\n          case EventKeys.UPARROW:\r\n              this.clearAutoSelection();\r\n              this.selectPreviousListItem(e);\r\n              e.preventDefault();\r\n              break;\r\n          case EventKeys.DOWNARROW:\r\n              this.clearAutoSelection();\r\n              this.selectNextListItem(e);\r\n              e.preventDefault();\r\n              break;\r\n          case EventKeys.ENTER:\r\n              this.chooseCurrentItem();\r\n              e.preventDefault();\r\n              break;\r\n          default:\r\n              // do nothing\r\n              break;\r\n      }\r\n  }\r\n\r\n\r\n  @HostListener('document:click',['$event']) \r\n  onOutsideClick(e: MouseEvent) {\r\n    if(!this.wasInsideClicked) {\r\n      this.wasFocused = false;\r\n      setTimeout(_=>{\r\n        if(!this.wasFocused){\r\n          this.panel.hide();\r\n          this.chDetRef.markForCheck();\r\n          this.chDetRef.detectChanges();\r\n        }},150);\r\n    }\r\n    this.wasInsideClicked = false;\r\n  }\r\n\r\n  @HostListener('click',['$event']) \r\n  onInsideClick(e: MouseEvent) {\r\n    this.wasInsideClicked = true;\r\n    this.wasFocused = true;\r\n  }\r\n\r\n  onHostFocusIn(e: FocusEvent) {\r\n    if(this.hasItems){\r\n      this.panel.show();\r\n      this.chDetRef.markForCheck();\r\n      this.chDetRef.detectChanges();\r\n    }\r\n    this.wasFocused = true;\r\n  }\r\n\r\n  onHostFocusOut(e: FocusEvent){\r\n    this.wasFocused = false;\r\n    setTimeout(_=>{\r\n      if(!this.wasFocused){\r\n        this.panel.hide();\r\n        this.chDetRef.markForCheck();\r\n      }},150);\r\n  }\r\n\r\n  onListItemMouseOver(e: DropdownInputItemsMouseEvent) {\r\n    this.clearAutoSelection();\r\n    this.clearSelection();\r\n    this.selectedIndex = e.index;\r\n    this.list.changeSelection(this.selectedIndex,true);\r\n  }\r\n\r\n  onListItemClicked(e: DropdownInputItemsMouseEvent) {\r\n    this.selectedIndex = e.index;\r\n    this.list.changeSelection(this.selectedIndex,true);\r\n    this.chooseCurrentItem();\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Enumerate the desired key codes for key events\r\n */\r\nenum EventKeys {\r\n    ENTER = 13,\r\n    UPARROW = 38,\r\n    DOWNARROW = 40,\r\n};\r\n","import { Directive, Input } from '@angular/core';\r\nimport { BBSlidingPanel } from '../sliding-panel/sliding-panel.component';\r\n\r\n@Directive({\r\n  selector: '[bb-sliding-panel-focus]',\r\n  host: {\r\n    '(focus)':\"onFocus($event)\",\r\n    '(blur)':\"onBlur($event)\"\r\n  }\r\n})\r\nexport class BBDropdownInputDirective {\r\n  @Input('bb-sliding-panel-focus') panel: BBSlidingPanel;\r\n  @Input() canShow: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  onFocus(e: FocusEvent) {\r\n    if(this.canShow) {\r\n      console.log('showing');\r\n      this.panel.show();\r\n    }\r\n  }\r\n\r\n  onBlur(e: FocusEvent) {\r\n    this.panel.hide();\r\n  }\r\n\r\n\r\n}\r\n","import {\r\n    Directive,  \r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n    ReflectiveInjector,\r\n    ViewChild,\r\n    ViewContainerRef } from '@angular/core';\r\nimport { DynamicComponentData } from './dynamic-component-data.interface';\r\n\r\n/**\r\n */\r\n@Directive({\r\n  selector: '[bb-dynamic-component]',\r\n  exportAs:'dynamicComp',\r\n})\r\nexport class BBDynamicComponentDirective {\r\n    public currentCompRef: ComponentRef<any>;\r\n\r\n    public dccClasses: any = {};\r\n\r\n    @Input('bb-dynamic-component') public set componentData(compData: DynamicComponentData) {\r\n      this.createComponent(compData);\r\n    }\r\n\r\n    constructor(protected vcRef: ViewContainerRef,\r\n                protected resolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    protected createComponent(compData: DynamicComponentData) {\r\n      if (!compData) {\r\n        return;\r\n      }\r\n\r\n      if (this.currentCompRef) {\r\n        this.currentCompRef.destroy();\r\n      }\r\n\r\n      let inputProviders: any[] = []\r\n\r\n      if (compData.providers) {\r\n        inputProviders = Object.keys(compData.providers).map(\r\n          (provName: any) => {\r\n            return { provide: provName, useValue: compData.providers[provName] };\r\n          });\r\n      }\r\n\r\n      let injector =\r\n        ReflectiveInjector\r\n          .fromResolvedProviders(\r\n            ReflectiveInjector.resolve(inputProviders),\r\n            this.vcRef.parentInjector);\r\n      \r\n      let compRef: ComponentRef<any> =\r\n        this.resolver\r\n          .resolveComponentFactory(compData.component)\r\n          .create(injector);\r\n\r\n      this.vcRef.insert(compRef.hostView);\r\n\r\n      if (compData.inputs) {\r\n        Object.keys(compData.inputs).map(\r\n          input => {\r\n            compRef.instance[input] = compData.inputs[input];\r\n          }\r\n        )\r\n      }\r\n\r\n      compRef.changeDetectorRef.markForCheck();\r\n      this.currentCompRef = compRef;\r\n    }\r\n\r\n \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BBDynamicComponentDirective } from './dynamic-component.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [BBDynamicComponentDirective],\n  exports: [BBDynamicComponentDirective]\n})\nexport class BBDynamicComponentModule { }\n","import {\r\n    Component,\r\n    ComponentRef,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ComponentFactoryResolver,\r\n    ReflectiveInjector,\r\n    ViewContainerRef,\r\n    ViewChildren,\r\n    QueryList,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    HostBinding,\r\n} from '@angular/core';\r\nimport { Observable ,  Subscription } from 'rxjs';\r\nimport { DropdownItemComponentData } from '../service/dropdown-input-service.interface';\r\nimport { BBDynamicComponentDirective } from '../../dynamic-component/dynamic-component.directive';\r\nimport { DropdownInputItemsMouseEvent } from '../events/dropdown-input-item-events.interface';\r\n\r\n@Component({\r\n    selector:'ul[bb-dropdown-input-items-list]',\r\n    template: `<li *ngFor=\"let compData of dynamicComponentsData; let i = index;\"\r\n    #listItem\r\n    class=\"item\"\r\n    [class.auto-selected]=\"itemAutoSelected[i]\"\r\n    [class.selected]=\"itemSelected[i]\"\r\n    (click)=\"onListItemClick($event, i)\"\r\n    (mouseover)=\"onListItemMouseOver($event, i)\">\r\n    <ng-template #container=\"dynamicComp\" [bb-dynamic-component]=\"compData\"></ng-template>\r\n</li>\r\n\r\n\r\n`,\r\n    styles: [``],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BBDropdownInputItemsList {\r\n    @HostBinding('class.bb-dropdown-input-items-list') applyHostClass = true;\r\n\r\n    @Input() public dynamicComponentsData: DropdownItemComponentData[] = [];\r\n\r\n    public dynamicComponentClasses: any[];\r\n\r\n    @ViewChildren('container') \r\n        public dynamicComponentContainers: QueryList<BBDynamicComponentDirective>;\r\n\r\n    @ViewChildren('listItem',{read:ViewContainerRef})\r\n        public listItems: QueryList<ViewContainerRef>;\r\n\r\n    public get listElements() {\r\n        return this.listItems.toArray().map(li=>{\r\n            return (li.element.nativeElement as HTMLLIElement);\r\n        });\r\n    }\r\n\r\n    @Output() public newContainers = new EventEmitter<BBDynamicComponentDirective[]>();\r\n\r\n    @Output() public listItemMouseOver = new EventEmitter<DropdownInputItemsMouseEvent>();\r\n\r\n    @Output() public listItemClick = new EventEmitter<DropdownInputItemsMouseEvent>();\r\n\r\n    private newContainersSub: Subscription;\r\n\r\n    itemAutoSelected: boolean[] = [];\r\n    itemSelected: boolean[] = [];\r\n\r\n    constructor(private chDetRef: ChangeDetectorRef) {\r\n    }\r\n\r\n    public changeSelection(index:number, selected: boolean) {\r\n        this.itemSelected[index]=selected;\r\n        this.chDetRef.markForCheck();\r\n        this.chDetRef.detectChanges();\r\n    }\r\n\r\n    public changeAutoSelection(index: number, selected: boolean) {\r\n        this.itemAutoSelected[index]=selected;\r\n        this.chDetRef.markForCheck();\r\n        this.chDetRef.detectChanges();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // emit the original list\r\n        this.newContainers.emit(this.dynamicComponentContainers.toArray());\r\n        \r\n        if (this.newContainersSub) {\r\n            this.newContainersSub.unsubscribe();\r\n        }\r\n\r\n        this.newContainersSub =\r\n            this.dynamicComponentContainers\r\n                .changes\r\n                .subscribe(\r\n                    newList => {\r\n                        this.itemAutoSelected = [];\r\n                        this.itemSelected = [];\r\n                        this.newContainers.emit(newList.toArray());\r\n                    },\r\n                    (error: string) => console.log(error),\r\n                    () => {\r\n                        this.newContainersSub.unsubscribe()\r\n                    });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.newContainersSub) {\r\n            this.newContainersSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onListItemClick(\r\n        e: MouseEvent, \r\n        index: number){\r\n        this.listItemClick.emit({\r\n            event: e,\r\n            index: index\r\n        });\r\n    }\r\n\r\n    onListItemMouseOver(\r\n        e: MouseEvent, \r\n        index: number) {\r\n        this.listItemMouseOver.emit({\r\n            event: e,\r\n            index: index\r\n        });\r\n    }\r\n}\r\n\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBDropdownInput } from './dropdown-input.component';\r\nimport { BBSlidingPanelModule } from '../sliding-panel/sliding-panel.module';\r\nimport { BBDropdownInputDirective } from './dropdown-input.directive';\r\nimport { BBDynamicComponentModule } from '../dynamic-component/dynamic-component.module';\r\nimport { BBDropdownInputItemsList } from './item-list/dropdown-input-item-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BBSlidingPanelModule,\r\n    BBDynamicComponentModule,\r\n  ],\r\n  \r\n  declarations: [\r\n    BBDropdownInput,\r\n    BBDropdownInputDirective, \r\n    BBDropdownInputItemsList,\r\n  ],\r\n  \r\n  exports: [\r\n\t  BBDropdownInput,\r\n  ]\r\n})\r\nexport class BBDropdownInputModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBDropdownInputModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[bb-menu-item]',\r\n})\r\nexport class  BBMenuItem {\r\n    constructor(\r\n        private _viewContainer: ViewContainerRef) { }\r\n}","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[bb-menu-item-right]',\r\n})\r\nexport class  BBMenuItemRight {\r\n    constructor() { }\r\n}","import { \r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  HostBinding,\r\n  OnInit,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  NgZone,\r\n } from '@angular/core';\r\n\r\nimport { \r\n  BBSlidingPanel, \r\n  BBSlidingPanelToggle } from '../sliding-panel';\r\n\r\nimport {BBMenuItem} from '../common/menu-item.directive';\r\nimport {BBMenuItemRight} from './menu-item-right.directive';\r\nimport { Observable ,  fromEvent ,  of ,  Subscription } from 'rxjs';\r\nimport { merge ,  map ,  distinctUntilChanged } from 'rxjs/operators';\r\n\r\n/**\r\n * A hamburger menu is either a div or nav element\r\n * that has arbitrary items as it's content with the\r\n * bb-menu-item or bb-menu-item-right directives.\r\n * \r\n * It takes a standard css media query as an input,\r\n * expandOnQuery, and when that query returns true \r\n * the menu will display the items inside it's borders.\r\n * \r\n * If the query is false the menu will be rendered in \r\n * the collapsed state where a toggle will be right \r\n * justified and when clicked will show and hide the\r\n * menu item contents in a panel that drops down.\r\n * \r\n * The toggle itself is set by adding the bb-menu-toggle\r\n * directive to content inside the menu element that \r\n * should act as the toggle.\r\n * \r\n * The hamburger menu component is exported as BBHamburgerMenu\r\n * and provides the state of the panel with isOpen and the \r\n * state of the menu itself as expanded.  These can be used \r\n * to modify the menu content itself based on the current\r\n * state of the menu.\r\n */\r\n@Component({\r\n  selector: 'div[bb-hamburger-menu], nav[bb-hamburger-menu]',\r\n  template: `<div class=\"menu-container\">\r\n  <ng-content select=\"[bb-fixed-content]\"></ng-content>\r\n\r\n  <div bb-sliding-panel\r\n      class=\"menu-items-container\"\r\n      slideDirection=\"down\"\r\n      #panel=\"bbSlidingPanel\">\r\n    <div class=\"menu-items\">\r\n      <ng-content select=\"[bb-menu-item]\"></ng-content>\r\n    </div>\r\n    <div class=\"menu-items-right\">\r\n      <ng-content select=\"[bb-menu-item-right]\"></ng-content>\r\n    </div>\r\n  </div>\r\n  \r\n  <div [bb-sliding-panel-toggle]=\"panel\"\r\n       #toggle=\"bbSlidingPanelToggle\" \r\n       [toggleOnClick]=\"toggleOnClick\"\r\n       [showOnHover]=\"showOnHover\"\r\n       [showOnInit]=\"expanded\"\r\n       [closeOnClickOutside]=\"closeOnClickOutside\">\r\n      <ng-content select=\"[bb-menu-toggle]\"></ng-content>\r\n  </div>\r\n</div>`,\r\n  styles: [`div.menu-container{display:flex;flex:1;flex-direction:row;align-items:center;position:relative;min-height:inherit;max-height:inherit;height:inherit}:host.bb-hamburger-menu.expanded div.menu-items-container{display:flex;flex-direction:row;flex:1;justify-content:space-between}:host.bb-hamburger-menu.expanded div.menu-items,:host.bb-hamburger-menu.expanded div.menu-items-right{display:flex;flex-direction:row;flex-grow:1;flex-shrink:1;flex-basis:auto}:host.bb-hamburger-menu.expanded div.menu-items-right{justify-content:flex-end}:host.bb-hamburger-menu.collapsed div.menu-items-container{display:flex;flex-direction:column;flex:1}:host.bb-hamburger-menu.collapsed div.menu-items,:host.bb-hamburger-menu.collapsed div.menu-items-right{display:flex;flex-direction:column;flex-grow:1;flex-shrink:1;flex-basis:auto}:host.bb-hamburger-menu.expanded div.bb-sliding-panel-toggle{visibility:hidden;width:0}div.bb-sliding-panel-toggle{display:inline-block}:host.collapsed div.menu-items-container{position:absolute;top:100%;left:0;right:0}:host.collapsed div.menu-container{justify-content:space-between}div.menu-items{flex-grow:1;flex-shrink:1;flex-basis:auto}`],\r\n  host: {\r\n    '[class.expanded]': \"expanded\",\r\n    '[class.collapsed]': \"!expanded\",\r\n  },\r\n  exportAs:'bbHamburgerMenu'\r\n})\r\nexport class BBHamburgerMenu implements OnInit, OnDestroy, AfterViewInit {\r\n  @HostBinding('class.bb-hamburger-menu') applyHostClass = true;\r\n\r\n  @ViewChild('panel') panel: BBSlidingPanel;\r\n  @ViewChild('toggle') toggle: BBSlidingPanelToggle;\r\n\r\n  @ContentChildren(BBMenuItem, { read:ElementRef, descendants:true }) \r\n  items: QueryList<ElementRef>;\r\n  @ContentChildren(BBMenuItemRight, {read:ElementRef, descendants:true}) \r\n  rightItems: QueryList<ElementRef>;\r\n\r\n  /**\r\n   * Get the items currently being displayed\r\n   * in the hamburger menu.\r\n   */\r\n  public get itemElementRefs(): ElementRef[] {\r\n    return this.items.toArray().concat(this.rightItems.toArray());\r\n  }\r\n\r\n  /**\r\n   * Return if the panel is open or not.\r\n   */\r\n  public get isOpen() {\r\n    return this.panel.isShowing;\r\n  }\r\n\r\n  /**\r\n   * A css media query as a string that\r\n   * will determine when the hamburger menu\r\n   * should expand the items onto the menu \r\n   * bar and remove the dropdown toggle\r\n   */\r\n  @Input() expandOnQuery: string;\r\n         \r\n  /**\r\n   * Show the menu if the toggle is hovered\r\n   * over.  Defaults to false.\r\n   */\r\n  @Input() showOnHover = false;\r\n\r\n  /**\r\n   * Close the menu if a click happens outside\r\n   * it.  Defaults to true.\r\n   */\r\n  @Input() closeOnClickOutside = true;\r\n\r\n  /**\r\n   * Allow the toggle to work on the\r\n   * click event.\r\n   */\r\n  readonly toggleOnClick = true;\r\n\r\n  /**\r\n   * Cache for the closeOnClickOutside\r\n   * input.\r\n   */\r\n  private _cocoInit = false;\r\n\r\n  /**\r\n   * Use a flag member for the expanded \r\n   * state because host bindings can't \r\n   * use the async pipe so we have to \r\n   * cache the media query results.\r\n   */\r\n  public expanded = false;;\r\n\r\n  /**\r\n   * Track the subscription to the window\r\n   * resize event and media query result\r\n   * stream.\r\n   */\r\n  private expandedSubscription: Subscription;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /*\r\n     * Save the close on click outside\r\n     * state.  This will be toggled so\r\n     * that the panel doesnt enter the\r\n     * closed state when the menu bar \r\n     * is in the expanded state.\r\n     * \r\n     * Otherwise the panel collapses and\r\n     * the items disappear with no toggle\r\n     * to bring them back.\r\n     */\r\n    this._cocoInit = this.closeOnClickOutside;\r\n    \r\n    /*\r\n     * Determine the initial expansion state\r\n     * based on the media query.\r\n     */\r\n    this.expanded = window.matchMedia(this.expandOnQuery).matches;\r\n\r\n    if(this.expanded) {  \r\n      this.closeOnClickOutside = false;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    /*\r\n     * Set up the stream\r\n     */\r\n    this.expandedSubscription = \r\n      fromEvent(window,\"resize\")\r\n      .pipe(\r\n        map(_=>window.matchMedia(this.expandOnQuery).matches),\r\n        distinctUntilChanged())\r\n      .subscribe(expanded=>{\r\n          this.expanded = expanded;\r\n          this.togglePanelState();\r\n      });  \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.expandedSubscription && !this.expandedSubscription.closed) {\r\n      this.expandedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the state of the panel \r\n   * to showing or hiding based\r\n   * on the cached expanded member\r\n   */\r\n  private togglePanelState() {\r\n    if(this.expanded) {  \r\n      this.closeOnClickOutside = false;\r\n      this.toggle.showPanel();\r\n    }\r\n    else {\r\n      this.closeOnClickOutside = this._cocoInit;\r\n      this.toggle.hidePanel();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBMenuItem } from './menu-item.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    BBMenuItem,\r\n  ],\r\n  exports: [\r\n    BBMenuItem,\r\n  ]\r\n})\r\nexport class BBCommonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBCommonModule,\r\n      providers: []\r\n    };\r\n  }\r\n }\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBSlidingPanelModule } from '../sliding-panel/sliding-panel.module';\r\nimport { BBHamburgerMenu } from './hamburger-menu.component';\r\nimport { BBMenuItemRight } from './menu-item-right.directive';\r\nimport {BBCommonModule} from '../common/common.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BBSlidingPanelModule,\r\n    BBCommonModule,\r\n  ],\r\n  \r\n  declarations: [\r\n    BBHamburgerMenu,\r\n    BBMenuItemRight,\r\n  ],\r\n  \r\n  exports: [\r\n    BBHamburgerMenu,\r\n    BBMenuItemRight,\r\n  ]\r\n})\r\nexport class BBHamburgerMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBHamburgerMenuModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { \r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  EventEmitter,\r\n  TemplateRef,\r\n  ViewRef,\r\n  Renderer,\r\n  ViewChild,\r\n  HostBinding,\r\n  NgZone,\r\n } from '@angular/core';\r\nimport { BBMenuItem } from '../common/menu-item.directive';\r\nimport { BBSlidingPanel } from '../sliding-panel/sliding-panel.component';\r\n\r\n@Component({\r\n  selector: 'div[bb-collapsing-menu]',\r\n  template: `<div class=\"menu-container\">\r\n  <div #displayedItems class=\"displayed\">\r\n  </div>\r\n\r\n  <div  #toggle\r\n        [class.hidden]=\"!hasOverflow\" \r\n        [bb-sliding-panel-toggle]=\"panel\"\r\n        [toggleOnClick]=\"toggleOnClick\"\r\n        [closeOnClickOutside]=\"closeOnClickOutside\"\r\n        [showOnHover]=\"showOnHover\">\r\n    \r\n    <ng-content select=\"[bb-menu-toggle]\"></ng-content>\r\n  </div>\r\n  <div bb-sliding-panel \r\n       #panel=\"bbSlidingPanel\"\r\n       #collapsedItems \r\n       slideDirection=\"down\"\r\n       #panel=\"bbSlidingPanel\">\r\n  </div>\r\n</div>`,\r\n  styles: [`div.displayed{flex-grow:1;flex-direction:row;flex-shrink:0;display:flex}div.menu-container{position:relative;height:inherit;flex-direction:row;display:flex;align-items:center;flex-shrink:0;flex-grow:1}div.bb-sliding-panel{display:flex;flex-direction:column;flex-grow:1;position:absolute;right:0;top:100%}div.hidden{visibility:hidden}`],\r\n  host:{\r\n    '(window:resize)': \"onWindowResize()\",\r\n  },\r\n  exportAs: \"bbCollapsingMenu\"\r\n})\r\nexport class BBCollapsingMenu {\r\n  @HostBinding('class.bb-collapsing-menu') applyHostClass = true;\r\n\r\n  /**\r\n   * Controls whether the collapsed items should  \r\n   * open based on a click event or not.\r\n   */\r\n  @Input() toggleOnClick = true;\r\n\r\n  /**\r\n   * Controls whether the collapsed items should open \r\n   * on mouse over or not.\r\n   */\r\n  @Input() showOnHover = false;\r\n\r\n  /**\r\n   * Controls whether the collapsed items should close\r\n   * When clicked outside the toggle or panel or not.\r\n   */\r\n  @Input() closeOnClickOutside = true;\r\n\r\n  @ContentChildren(BBMenuItem, {read:ElementRef, descendants: false}) \r\n    items: QueryList<ElementRef>;\r\n  @ViewChild('displayedItems', {read:ElementRef}) \r\n    displayedItems: ElementRef;\r\n  @ViewChild('collapsedItems', {read:ElementRef}) \r\n    collapsedItems: ElementRef;\r\n  @ViewChild('toggle', {read:ElementRef}) \r\n    toggle: ElementRef;\r\n\r\n  @ViewChild('panel') panel: BBSlidingPanel;\r\n\r\n  public get isOpen() {\r\n    return this.panel.isShowing;\r\n  }\r\n\r\n  /**\r\n   * Per issue 10098 ContentChildren currently also adds the host component\r\n   * to a QueryList that it satisfies making it necessary to filter the \r\n   * host component out of it's own list in case someone wants to nest\r\n   * a collapsing menu inside another BB component that uses BBMenuItems.\r\n   * \r\n   * https://github.com/angular/angular/issues/10098#issuecomment-235157642\r\n   */\r\n  private get itemElements(): ElementRef[] {\r\n    return this.items.toArray()\r\n      .filter(el=> el.nativeElement !== this.hostElementRef.nativeElement);\r\n  }\r\n\r\n  private get hostDiv(): HTMLDivElement {\r\n    return this.hostElementRef.nativeElement as HTMLDivElement;\r\n  }\r\n\r\n  private get displayedDiv(): HTMLDivElement {\r\n    return this.displayedItems.nativeElement as HTMLDivElement;\r\n  }\r\n\r\n  private get collapsedDiv(): HTMLDivElement {\r\n    return this.collapsedItems.nativeElement as HTMLDivElement;\r\n  }\r\n\r\n  private get toggleDiv(): HTMLDivElement {\r\n    return this.toggle.nativeElement as HTMLDivElement;\r\n  }\r\n\r\n  hasOverflow = false;\r\n\r\n  constructor(\r\n    private renderer: Renderer, \r\n    private hostElementRef: ElementRef,\r\n    private zone: NgZone) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.calculateOverflow();\r\n  }\r\n\r\n  /**\r\n   * Determine which, if any, items need to be \r\n   * moved into the collapsed panel when they \r\n   * overflow the menu width.\r\n   */\r\n  private calculateOverflow() {\r\n      this.renderer.projectNodes(this.displayedDiv, \r\n        this.itemElements.map(el=>{ return el.nativeElement }));\r\n\r\n      if(this.areDisplayedItemsToWide()) {\r\n\r\n        this.zone.run(()=>{\r\n          setTimeout(()=>{\r\n            this.hasOverflow = true})});\r\n\r\n        const menuCalcedRight = \r\n          (this.hostDiv.offsetLeft + \r\n          this.hostDiv.offsetWidth - \r\n          this.toggleDiv.offsetWidth);\r\n\r\n        let firstOverflowIndex = Number.POSITIVE_INFINITY;\r\n        let overflowAmount = 0;\r\n                   \r\n        // find the first item that is outside the menu's size - toggle size\r\n        for(let i = 0; i < this.itemElements.length; i++) {\r\n          const ele = (this.itemElements[i].nativeElement as HTMLElement);\r\n          const eleCalcedRight = (ele.offsetLeft + this.hostDiv.offsetLeft + ele.offsetWidth);\r\n\r\n          // calculate how much an item overflows the container\r\n          // taking the toggles width into account.\r\n          overflowAmount = eleCalcedRight - menuCalcedRight;\r\n\r\n          if(overflowAmount > 0) {\r\n            firstOverflowIndex = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // all items are collapsed\r\n        if (firstOverflowIndex == 0) {\r\n            this.renderer.projectNodes(this.collapsedDiv,\r\n              this.itemElements.map(el=>{return el.nativeElement}));\r\n        }\r\n\r\n        // the overflow items make enough room for the toggle\r\n        else {\r\n            this.renderer.projectNodes(this.collapsedDiv,\r\n              this.itemElements\r\n                .filter((el,index)=>{\r\n                  return (index >= firstOverflowIndex)})\r\n                .map(el=>{return el.nativeElement}));\r\n        }\r\n      }\r\n      else {\r\n        this.zone.run(()=>{\r\n          setTimeout(()=>{\r\n            this.hasOverflow = false})});\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Determine if the menu content width is larger than the menu width\r\n   */\r\n  private areDisplayedItemsToWide() {\r\n    return this.displayedDiv.getBoundingClientRect().width > \r\n      this.hostDiv.getBoundingClientRect().width;\r\n  }\r\n\r\n  /**\r\n   * Event handlers\r\n   */\r\n\r\n  onWindowResize() {\r\n    this.calculateOverflow();\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBCommonModule } from '../common/common.module';\r\nimport { BBCollapsingMenu } from './collapsing-menu.component';\r\nimport { BBSlidingPanelModule } from '../sliding-panel/sliding-panel.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BBCommonModule,\r\n    BBSlidingPanelModule\r\n  ],\r\n  declarations: [BBCollapsingMenu],\r\n  exports: [BBCollapsingMenu]\r\n})\r\nexport class BBCollapsingMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBCollapsingMenuModule,\r\n      providers: []\r\n    };\r\n  }\r\n }\r\n","import { \r\n    Component, \r\n    OnInit, \r\n    Input, \r\n    Output,\r\n    EventEmitter,\r\n    ViewChild, \r\n    ElementRef } from '@angular/core';\r\nimport { Observable ,  fromEvent } from 'rxjs';\r\nimport { map ,  debounceTime ,  distinctUntilChanged } from 'rxjs/operators';\r\nimport { BBMultiSelectItem } from './multi-select-item.interface';\r\n\r\n@Component({\r\n    selector: 'div[bb-multi-select]',\r\n    template: `<input class=\"selections-filter\" #filter [attr.placeholder]=\"placeholderText\"/>\r\n<div class=\"container-labels\">\r\n    <span>Items</span><span>Selected</span>\r\n</div>\r\n<div class=\"selections-container\">\r\n    <div class=\"choices\">\r\n        <ul>\r\n            <li *ngFor=\"let choice of choices\">\r\n                <a (click)=\"onChoiceClicked(choice)\">{{choice.text}}</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"selections\">\r\n        <ul>\r\n            <li *ngFor=\"let selection of selections\">\r\n                <a (click)=\"onSelectionClicked(selection)\">{{selection.text}}</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>`,\r\n    styles: [`:host div{display:flex;flex-direction:column}input.selections-filter{justify-content:center}div.container-labels,div.selections-container{width:inherit;display:flex;flex-direction:row;justify-content:space-between}.selections-container ul{padding-left:0}.choices ul,.selections ul{list-style:none}div.container-labels{border-bottom:1px solid #000}`],\r\n})\r\nexport class BBMultiSelectComponent implements OnInit {\r\n    @Input() placeholderText = \"Search...\";\r\n    @Input() filterChangeDelayms = 200;\r\n\r\n    @Input() selectionItems: BBMultiSelectItem[];\r\n\r\n    get choices(): BBMultiSelectItem[] {\r\n        return this.selectionItems.filter(item=>{ return !item.selected});\r\n    }\r\n\r\n    get selections(): BBMultiSelectItem[] {\r\n        return this.selectionItems.filter(item=>{ return item.selected});\r\n    }\r\n\r\n    @ViewChild('filter') filterInput: ElementRef;\r\n\r\n    @Output() itemSelected = new EventEmitter<BBMultiSelectItem>();\r\n    @Output() itemUnselected = new EventEmitter<BBMultiSelectItem>();\r\n\r\n    constructor() {\r\n        console.log('Warning this component is still under heavy development.');\r\n        console.log('It isn\\'t completely functional yet and is subject to change.');\r\n    }\r\n\r\n    ngOnInit() { \r\n        fromEvent(this.filterInput.nativeElement, 'keyup')\r\n        .pipe(\r\n            map((event:KeyboardEvent)=>(event.target as HTMLInputElement).value),\r\n            debounceTime(this.filterChangeDelayms),\r\n            distinctUntilChanged())\r\n        .subscribe(\r\n            filterText=> this.filterItems(filterText)\r\n        );\r\n\r\n        // temp testing code\r\n        if(!this.selectionItems) {\r\n            this.selectionItems = [\r\n                {\r\n                    text: 'Name',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Position',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Year of Birth',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Rookie Season',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Height',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Weight',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Forty Time',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Bench Weight',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Vertical Jump',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Broad Jump',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Shuttle Time',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Cone Time',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Draft Position',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'College',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'College Division',\r\n                    payload: {},\r\n                    selected: false,\r\n                },\r\n                {\r\n                    text: 'Current Team',\r\n                    payload: {},\r\n                    selected: false,\r\n                }\r\n            ];\r\n        }\r\n\r\n        this.selections.push(this.choices[1]);\r\n    }\r\n\r\n    onChoiceClicked(item: BBMultiSelectItem) {\r\n        item.selected = true;\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSelectionClicked(item: BBMultiSelectItem) {\r\n        item.selected = false;\r\n        this.itemUnselected.emit(item);\r\n    }\r\n\r\n    filterItems(text: string) {\r\n        console.log(text);\r\n    }\r\n}\r\n\r\n\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BBMultiSelectComponent } from './multi-select.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  \r\n  declarations: [\r\n    BBMultiSelectComponent\r\n  ],\r\n  \r\n  exports: [\r\n    BBMultiSelectComponent\r\n  ]\r\n})\r\nexport class BBMultiSelectModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: BBMultiSelectModule,\r\n      providers: []\r\n    };\r\n  }  \r\n}\r\n","import { Subscription } from 'rxjs';\r\n\r\nexport function closeSubscription(sub: Subscription) {\r\n    if(sub && !sub.closed) {\r\n        sub.unsubscribe();\r\n    }\r\n}","export const bbDnDType = \"bb/dnd\";","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BBDragAndDropService {\n\n  constructor() { }\n\n}\n","import { \n  Directive, \n  OnInit, \n  ElementRef, \n  ViewRef, \n  ViewContainerRef, \n  TemplateRef, \n  EmbeddedViewRef, \n  OnDestroy,\n  EventEmitter,\n  Output} from '@angular/core';\nimport { Observable ,  Subscription ,  fromEvent } from 'rxjs';\nimport { bbDnDType } from './../dnd.const';\nimport { closeSubscription } from '../../common';\nimport { BBDragAndDropService } from '../drag-and-drop.service';\nimport { BBVector, BBDragStartEvent } from './../dnd.models';\n\n/**\n * BB Draggable Structural Directive\n */\n@Directive({\n  selector: '[bbDraggable]'\n})\nexport class BBDraggableDirective implements OnInit, OnDestroy {\n  @Output() dragStartedOnView = new EventEmitter<BBDragStartEvent>();\n  @Output() dragEndedOnView = new EventEmitter<ViewRef>();\n  \n  /**\n   * \n   */\n  public get isBeingDragged() {\n    return this._isBeingDragged;\n  }\n\n  /**\n   * \n   */\n  public get draggableTemplateRef() {\n    return this.templateRef;\n  }\n\n  /**\n   * \n   */\n  private draggableViewRef: ViewRef;\n\n  /**\n   * \n   */\n  private embeddedTemplateRef: EmbeddedViewRef<any>;\n\n  /**\n   * \n   */\n  private dragStartSubscription: Subscription;\n\n  /**\n   * \n   */\n  private dragEndSubscription: Subscription;\n\n  /**\n   * \n   */\n  private set isDragged(dragged: boolean) {\n    this._isBeingDragged = dragged;\n\n    if(this._isBeingDragged) {\n      //this.dragStartedOnView.next(this.draggableViewRef);\n      //this.viewContainer.detach();\n    } else {\n      //this.dragEndedOnView.next(this.draggableViewRef);\n      //this.viewContainer.insert(this.draggedViewRef);\n    }\n  }\n\n  /**\n   * \n   */\n  private _isBeingDragged = false;\n\n  /**\n   * \n   */\n  private context = new DraggableContext();\n\n  /**\n   * \n   * @param dndService \n   * @param templateRef \n   */\n  constructor(\n    private dndService: BBDragAndDropService,    \n    private templateRef: TemplateRef<any>\n  ) {\n  }\n\n  /**\n   * \n   */\n  ngOnInit() {\n    /*\n    this.embeddedTemplateRef = \n      this.viewContainer.createEmbeddedView(this.templateRef);\n    this.registerDragAndDropEvents(this.embeddedTemplateRef.rootNodes[0]);\n    this.draggedViewRef = this.viewContainer.get(0);\n    */\n  }\n\n  /**\n   * \n   */\n  ngOnDestroy() {\n    closeSubscription(this.dragStartSubscription);\n    closeSubscription(this.dragEndSubscription);\n  }\n\n  /**\n   * \n   * @param target \n   */\n  registerDragAndDropEvents(view: EmbeddedViewRef<any>) {\n    this.draggableViewRef = view;\n    let target = view.rootNodes[0] as HTMLElement;\n\n    target.setAttribute(\"draggable\",\"true\");\n\n    this.dragStartSubscription = \n      fromEvent<DragEvent>(target,\"dragstart\")\n        .subscribe((event: DragEvent)=>{\n          event.dataTransfer.setData(bbDnDType,'bbdraggable');\n          //event.dataTransfer.effectAllowed = \"move\";\n          //event.dataTransfer.setDragImage(\n          //  target.cloneNode(true) as HTMLElement,0,0);\n\n          let rect = event.srcElement.getBoundingClientRect();\n          let y = rect.top + (rect.height / 2);\n          let x = rect.left + (rect.width / 2);\n          console.log(x,y);\n\n          let e: BBDragStartEvent = {\n            view: this.draggableViewRef,\n            mouseOffset: {\n              offsetX: event.clientX - x,\n              offsetY: event.clientY - y\n            }\n          }\n\n          /*\n          let center = document.createElement(\"div\") as HTMLDivElement;\n          center.style.position = 'absolute';\n          center.style.left = `${mouseOffset.offsetX}px`;\n          center.style.top = `${mouseOffset.offsetY}px`;\n          center.style.borderRadius= \"20px\"\n          center.style.height = \"20px\";\n          center.style.width= \"20px\";\n          \n          let i = new Image();\n          \n          let clone = event.srcElement.cloneNode(true) as HTMLLIElement;\n          clone.appendChild(center);\n          i.appendChild(clone);\n          console.log(i);\n          event.dataTransfer.setDragImage(\n             i,event.pageX, event.pageY);\n          */\n\n          /*\n          event.dataTransfer.setDragImage(\n            event.srcElement,event.clientX, event.clientY);\n          */\n\n          /* Chrome calls dragend if the dom is changed during  */\n          /* drag start so in order to not call dragend         */\n          /* immediately we have to fire the dom manipulations  */\n          /* outside of the event                               */\n          setTimeout(()=>{\n            this.dragStartedOnView.next(e)\n          });\n        },\n        err=>console.log(err),\n        ()=>{});\n\n    this.dragEndSubscription = \n    fromEvent(target,\"dragend\")\n        .subscribe((event: DragEvent)=>{\n          //this.isDragged = false;\n          this.dragEndedOnView.next(this.draggableViewRef);\n        },\n        err=>console.log(err),\n        ()=>{});\n  }\n\n\n}\n\nexport class DraggableContext {\n  public implicit$: any = null;\n}\n","import { \n  Directive, \n  OnInit, \n  QueryList, \n  AfterContentInit, \n  ContentChildren,  \n  ElementRef,\n  ViewContainerRef,\n  Component,\n  ViewChild,\n  TemplateRef,\n  EmbeddedViewRef,\n  ViewRef,\n  OnDestroy} from '@angular/core';\nimport { BBDraggableDirective } from '../draggable/draggable.directive';\nimport { Observable ,  Subscription ,  fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { bbDnDType } from './../dnd.const';\nimport { BBDragAndDropService } from '../drag-and-drop.service';\nimport { BBDragStartEvent, BBVector } from '../dnd.models';\n\n@Component({\n  selector: '[bbDnDContainer]',\n  template: `<ng-container #dndContainer></ng-container>\r\n\r\n<ng-content></ng-content>\r\n`,\n  styles: [``]\n})\nexport class BBDragAndDropContainerComponent implements OnInit, AfterContentInit, OnDestroy {\n  @ContentChildren(BBDraggableDirective) draggablesQL: QueryList<BBDraggableDirective>;\n  @ViewChild(\"dndContainer\", {read: ViewContainerRef}) dndContainer: ViewContainerRef;\n  \n  private draggingMouseOffset: BBVector;\n  private dragStartEvent: BBDragStartEvent;\n  private draggableEmbeddedViews: EmbeddedViewRef<any>[] = [];\n  private dragSubscriptions: Subscription[] = [];\n\n  private readonly DefaultDragLocationTarget: DragLocationTarget = {\n    lowIndex: -1, \n    highIndex: -1,\n    viewBeingDragged: null\n  };\n\n  private dragLocation : DragLocationTarget = this.DefaultDragLocationTarget;\n  \n  constructor(\n    private dndService: BBDragAndDropService,\n    private hostElementRef: ElementRef    \n  ) {\n    console.warn('BB Drag and Drop is still under development.')\n  }\n\n  ngOnInit() {\n    this.dragSubscriptions.push(\n    fromEvent(this.hostElementRef.nativeElement,\"dragenter\")\n      .subscribe(this.onDragEnter));\n\n    this.dragSubscriptions.push(\n    fromEvent(this.hostElementRef.nativeElement,\"dragover\")\n      .pipe(\n        debounceTime(50))\n      .subscribe(this.onDragOver));\n\n    this.dragSubscriptions.push(\n    fromEvent(this.hostElementRef.nativeElement,\"dragover\")\n      .subscribe((e:Event)=>\n        e.preventDefault()));\n\n    this.dragSubscriptions.push(\n    fromEvent(this.hostElementRef.nativeElement,\"drop\")\n      .subscribe(this.onDrop));\n  }\n\n  ngAfterContentInit() {\n    this.dragSubscriptions.push(\n    this.draggablesQL\n      .changes\n      .subscribe((draggables:BBDraggableDirective[])=>{\n      }));\n    console.log(\"container\");\n    console.log(this.dndContainer);\n    this.draggablesQL.map(this.initDraggable);\n  }\n\n  ngOnDestroy() {\n    this.dragSubscriptions.forEach(sub=>{\n      if(!sub.closed) {\n        sub.unsubscribe();\n      }\n    })\n  }\n\n  /**\n   * \n   * @param draggable \n   * @param index \n   */\n  initDraggable = (draggable: BBDraggableDirective, index: number) => {\n    let embeddedViewRef = \n      this.dndContainer.createEmbeddedView(draggable.draggableTemplateRef)\n    this.draggableEmbeddedViews.push(embeddedViewRef);\n    draggable.registerDragAndDropEvents(embeddedViewRef);\n    this.dragSubscriptions.push(\n      draggable.dragStartedOnView.subscribe(this.onDragStart));\n    this.dragSubscriptions.push(\n      draggable.dragEndedOnView.subscribe(this.onDragEnd));\n  }\n\n  /**\n   * \n   * @param event \n   */\n  onDragStart = (event: BBDragStartEvent) => {\n    this.dragStartEvent = event;\n    this.draggingMouseOffset = event.mouseOffset;\n    let viewIndex = this.dndContainer.indexOf(event.view);\n    this.dndContainer.detach(viewIndex);\n    this.draggableEmbeddedViews.splice(viewIndex,1);\n  }\n\n  /**\n   * \n   * @param view \n   */\n  onDragEnd = (view: EmbeddedViewRef<any>) => {\n    //this.dndContainer.insert(view);\n    return;\n  }\n\n  onDragEnter = (event:DragEvent) => {\n    console.log(\"dragenter\");\n    event.dataTransfer.dropEffect = \"move\";\n    event.preventDefault();\n  }\n\n  onDragOver = (event:DragEvent) => {\n    console.log(\"dragover\");\n    // console.log(event.dataTransfer.types);\n    let shortestDistance = Number.MAX_SAFE_INTEGER;\n    let closestView: EmbeddedViewRef<any> = null;\n    let closestIndex = 0; \n    let nextClosestIndex = 0;\n\n    this.draggableEmbeddedViews\n      /*\n       * TODO: Long term optimization maybe use the item\n       * filtered out's index as the starting location\n       * for further hit tests since we know that it\n       * is the one being dragged.  Ie.  If Index 4 is\n       * filtered out then start hit tests at index 3 \n       * and 5 instead of starting hit tests at index \n       * 0 and checking all items.\n       */\n      .filter(view=>view!==this.dragStartEvent.view)\n      .map(view=>{\n        let element = (view.rootNodes[0] as HTMLElement);\n        let rect = element.getBoundingClientRect();\n        return {\n          view: view,\n          x: rect.left + (rect.width / 2),\n          y: rect.top + (rect.height / 2)\n        }})\n      .forEach((centerCoordinates, i) =>{\n        let dy = this.calculate1DimensionDistance(\n          centerCoordinates.y,\n          event.clientY + this.dragStartEvent.mouseOffset.offsetY);\n\n        console.log(`${i} = ${dy} y's: ${centerCoordinates.y} - ${event.clientY} + ${this.dragStartEvent.mouseOffset.offsetY}`)\n          \n        let distance = Math.abs(dy);\n\n        if(distance < shortestDistance) {\n          shortestDistance = distance;\n          closestView = centerCoordinates.view;\n          closestIndex = i;\n\n          // determine which side of the closest draggable\n          // the draggable being dragged is on and set the\n          // next closest accordingly\n          nextClosestIndex = (dy < 0)? closestIndex + 1: closestIndex - 1;\n\n          this.dragLocation = {\n            lowIndex: Math.min(closestIndex,nextClosestIndex),\n            highIndex: Math.max(closestIndex,nextClosestIndex),\n            viewBeingDragged: this.dragStartEvent.view\n          };\n        }\n      });\n\n    event.preventDefault();\n\n    /* this signifies that the container is a valid drop target  */\n    /* TODO: doesn't work at the moment? the BBDnDType is never */\n    /* properly attached to the event even though I am setting   */\n    /* the type inside the draggable directive event...          */\n    /*\n    if(event.dataTransfer.types.includes(bbDnDType)) {\n      console.log('bb transfer detected');\n    }\n    */\n  }\n\n  onDrop = (event:DragEvent) => {\n    this.dndContainer.insert(\n      this.dragLocation.viewBeingDragged,\n      this.dragLocation.highIndex);\n\n    this.draggableEmbeddedViews.splice(\n      this.dragLocation.highIndex,\n      0,\n      this.dragLocation.viewBeingDragged as EmbeddedViewRef<any>);\n  }\n\n  /**\n   * \n   * @param p1 \n   * @param p2 \n   */\n  private calculate1DimensionDistance(p1: number, p2: number) {\n    return p1 - p2;\n  }\n\n  /**\n   * \n   * @param x1 \n   * @param x2 \n   * @param y1 \n   * @param y2 \n   */\n  private calculate2DimensionDistance(x1: number,x2: number,y1: number,y2: number) {\n    return Math.sqrt(\n      this.calculate1DimensionDistance(x1,x2)**2 + \n      this.calculate1DimensionDistance(y1,y2)**2);\n  }\n\n    \n  \n}\n\nexport interface DragLocationTarget {\n  lowIndex: number;\n  highIndex: number;\n  viewBeingDragged: ViewRef;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BBDragAndDropContainerComponent } from './drag-and-drop-container/drag-and-drop-container.component';\nimport { BBDraggableDirective } from './draggable/draggable.directive';\nimport { BBDragAndDropService } from './drag-and-drop.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    BBDragAndDropContainerComponent,\n    BBDraggableDirective\n  ],\n  exports: [\n    BBDragAndDropContainerComponent,\n    BBDraggableDirective\n  ],\n  providers: [BBDragAndDropService]\n})\nexport class BBDragAndDropComponentModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBDragAndDropComponentModule,\n      providers: []\n    };\n  }\n }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabService {\n  activeTab: string = '';\n  tabsets = {};\n\n  constructor() { }\n}\n","import { Directive, ElementRef, Renderer2, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { TabService } from './tab.service';\n\n@Directive({\n  selector: '[bbTab]'\n})\nexport class TabDirective {\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2,\n    public tabService: TabService\n  ) { }\n\n  @Input('bbtab') tabName: string;\n  @Input('bbtabset') tabset: string;\n  @Input('bbactive') active: boolean;\n  @Input('bbactiveclass') activeClass: string;\n\n  @Output() bbshowstart = new EventEmitter();\n  @Output() bbshowend = new EventEmitter();\n\n  ngOnInit() {\n      if (this.active) {\n          this.bbshowstart.emit(this.tabName);\n          this.tabService.tabsets[this.tabset] = {};\n          this.setActive();\n      }\n  }\n\n  @HostListener('click', ['$event']) onClick(event) {\n      this.bbshowstart.emit(this.tabName);\n      event.preventDefault();\n      this.setActive();\n  }\n\n  setActive() {\n      let parentElement = this.el.nativeElement.parentNode;\n      let child = this.el.nativeElement.children[0];\n\n      let activeClassElement = 'none';\n      let activeClassTarget = 'none';\n\n      // Find out if this element, the parent element, or child elements have an active class set.\n      // Order of precedence: Parent, tab, child.\n      if (parentElement.hasAttribute('bbactiveclass')) {\n          activeClassElement = 'parent';\n          activeClassTarget = parentElement.attributes['bbtarget'].value;\n      }\n\n      if (this.activeClass) {\n          activeClassElement = 'tab';\n      }\n\n      if (child) {\n          if (child.hasAttribute('bbactiveclass')) {\n              activeClassElement = 'child';\n          }\n      }\n\n      // If the tab element itself has it set, apply it.\n      if (activeClassElement === 'tab') {\n          for(let i = 0; i < parentElement.children.length; i++) {\n              if (parentElement.children[i].hasAttribute('bbtab')) {\n                  this.renderer.setProperty(parentElement.children[i], 'bbactive', false);\n                  this.renderer.removeClass(parentElement.children[i], this.activeClass);\n              }\n          }\n          this.renderer.setProperty(this.el.nativeElement, 'bbactive', true);\n          this.renderer.addClass(this.el.nativeElement, this.activeClass);\n      } else if (activeClassElement === 'child') {\n          let childActiveClass = child.attributes.bbactiveclass.value;\n          for(let i = 0; i < parentElement.children.length; i++) {\n              if (parentElement.children[i].hasAttribute('bbtab')) {\n                  this.renderer.setProperty(parentElement.children[i], 'bbactive', false);\n                  this.renderer.removeClass(parentElement.children[i].children[0], childActiveClass);\n              }\n          }\n          this.renderer.setProperty(this.el.nativeElement, 'bbactive', true);\n          this.renderer.addClass(child, childActiveClass);\n\n      } else if (activeClassElement === 'parent') {\n          let parentActiveClass = parentElement.attributes.bbactiveclass.value;\n          for(let i = 0; i < parentElement.children.length; i++) {\n              if (parentElement.children[i].hasAttribute('bbtab')) {\n                  this.renderer.setProperty(parentElement.children[i], 'bbactive', false);\n                  if (activeClassTarget === 'tab') {\n                      this.renderer.removeClass(parentElement.children[i], parentActiveClass);\n                  } else if (activeClassTarget === 'child') {\n                      this.renderer.removeClass(parentElement.children[i].children[0], parentActiveClass);\n                  }\n              }\n          }\n          this.renderer.setProperty(this.el.nativeElement, 'bbactive', true);\n          if (activeClassTarget === 'tab') {\n              this.renderer.addClass(this.el.nativeElement, parentActiveClass);\n          } else if (activeClassTarget === 'child') {\n              this.renderer.addClass(this.el.nativeElement.children[0], parentActiveClass);\n          }\n      } else {\n          // There are no child elements and bbactiveClass isn't set.\n          for(let i = 0; i < parentElement.children.length; i++) {\n              if (parentElement.children[i].hasAttribute('bbtab')) {\n                  this.renderer.setProperty(parentElement.children[i], 'bbactive', false);\n              }\n          }\n          this.renderer.setProperty(this.el.nativeElement, 'bbactive', true);\n      }\n      this.tabService.tabsets[this.tabset]['activeTab'] = this.tabName;\n      this.bbshowend.emit(this.tabName);\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\nimport { TabService } from './tab.service';\n\n@Directive({\n  selector: '[bbTabContent]'\n})\nexport class TabContentDirective {\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2,\n    public tabService: TabService\n  ) { }\n\n  @Input('bbtabcontent') name: string;\n  @Input('bbtabset') tabset: string;\n\n  ngOnInit() {\n      this.setVisibility();\n  }\n\n  ngDoCheck() {\n      this.setVisibility();\n  }\n\n  setVisibility() {\n      let display = this.tabService.tabsets[this.tabset].activeTab === this.name ? 'block' : 'none';\n      this.renderer.setStyle(this.el.nativeElement, 'display', display);\n}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TabService } from './tab.service';\nimport { TabDirective } from './tab.directive';\nimport { TabContentDirective } from './tab-content.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  \n  declarations: [\n    TabDirective,\n    TabContentDirective\n  ],\n  \n  exports: [\n    TabDirective,\n    TabContentDirective\n  ]\n})\nexport class BBTabModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBTabModule,\n      providers: [TabService]\n    };\n  }\n }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DragAndDropService {\n  el: any;\n  dropzoneIndex: number;\n  droppableIndex: number;\n  model: Array<any>;\n  dropzones: Array<string> = [];\n\n  constructor() { }\n}\n","import { Directive, ElementRef, Renderer2, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { DragAndDropService } from './drag-and-drop.service';\n\n@Directive({\n  selector: '[bbDropper]'\n})\nexport class DropperDirective {\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2,\n    public dndService: DragAndDropService\n  ) {\n      el.nativeElement.draggable = true;\n      el.nativeElement.dragstart = this.dragstart;\n      el.nativeElement.dragend = this.dragend;\n  }\n\n  ngOnInit() {\n      if (this.bbdropperClass) {\n          this.renderer.addClass(this.el.nativeElement, this.bbdropperClass);\n      }\n  }\n\n  @Input('bbdropper') name: string;\n  @Input('bbdropperClass') bbdropperClass: string;\n  @Input('bbholdingClass') bbholdingClass: string;\n  @Input('bbpayload') bbpayload:string;\n  @Input('bbdropperId') bbdropperId: string;\n  @Output() bbstart = new EventEmitter();\n  @Output() bbend = new EventEmitter();\n\n  @HostListener('dragstart', ['$event']) dragstart(event:any) {\n      if (this.bbholdingClass !== undefined) {\n          this.renderer.addClass(this.el.nativeElement, this.bbholdingClass);\n      }\n      event.dataTransfer.setData('text/plain', this.bbpayload || null);\n      this.dndService.el = this.el;\n      if(this.bbdropperId) {\n          this.bbstart.emit(this.bbdropperId);\n      }\n  }\n\n  @HostListener('dragend') dragend() {\n      if (this.bbholdingClass !== undefined) {\n          this.renderer.removeClass(this.el.nativeElement, this.bbholdingClass);\n      }\n      if(this.bbdropperId) {\n          this.bbstart.emit(this.bbdropperId);\n      }\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, Output, HostListener, EventEmitter } from '@angular/core';\nimport { DragAndDropService } from './drag-and-drop.service';\n\n@Directive({\n  selector: '[bbDropZone]'\n})\nexport class DropZoneDirective {\n  constructor(\n    public el: ElementRef,\n    public dndService: DragAndDropService,\n    public renderer: Renderer2\n  ) { }\n\n  ngOnInit() {\n      if (this.bbdropzoneClass !== undefined) {\n          this.renderer.addClass(this.el.nativeElement, this.bbdropzoneHoverClass);\n      }\n      if (!this.dndService.dropzones.includes(this.name)) {\n          this.dndService.dropzones.push(this.name);\n      }\n  }\n\n  @Input('bbdropzone') name: string;\n\n  @Input('bbdropzoneClass') bbdropzoneClass: string;\n  @Input('bbdropzoneHoverClass') bbdropzoneHoverClass: string;\n  @Input('bbdropzoneId') bbdropzoneId: string;\n  @Output() bbdata = new EventEmitter();\n  @Output() bbenter = new EventEmitter();\n  @Output() bbleave = new EventEmitter();\n  @Output() bbdrop = new EventEmitter();\n\n  @HostListener('dragover', ['$event']) dragover(event) {\n      event.preventDefault();\n  }\n\n  @HostListener('dragenter') dragenter() {\n      if (this.bbdropzoneHoverClass) {\n          this.renderer.addClass(this.el.nativeElement, this.bbdropzoneHoverClass);\n      }\n      if (this.bbdropzoneId) {\n          this.bbenter.emit(this.bbdropzoneId);\n      }\n  }\n\n  @HostListener('dragleave') dragleave() {\n      if (this.bbdropzoneHoverClass) {\n          this.renderer.removeClass(this.el.nativeElement, this.bbdropzoneHoverClass);\n      }\n      if (this.bbdropzoneId) {\n          this.bbleave.emit(this.bbdropzoneId);\n      }\n  }\n\n  @HostListener('drop', ['$event']) drop(event) {\n      event.preventDefault();\n      this.renderer.removeClass(this.el.nativeElement, this.bbdropzoneHoverClass);\n\n      let dropped = this.dndService.el.nativeElement;\n      if (dropped.attributes.bbdropper.value === this.name) {\n          this.renderer.removeChild(this.dndService.el.nativeElement.parentNode, this.dndService.el.nativeElement);\n          this.renderer.appendChild(this.el.nativeElement, this.dndService.el.nativeElement);\n          if (dropped.attributes.bbpayload) {\n              this.bbdata.emit(dropped.attributes.bbpayload.value);\n          }\n      }\n      if (this.bbdropzoneId) {\n          this.bbdrop.emit(this.bbdropzoneId);\n      }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DragAndDropService } from './drag-and-drop.service';\nimport { DropperDirective } from './dropper.directive';\nimport { DropZoneDirective } from './drop-zone.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DropperDirective,\n    DropZoneDirective,\n  ],\n  exports: [\n    DropperDirective,\n    DropZoneDirective,\n  ]\n})\nexport class BBDragAndDropModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBDragAndDropModule,\n      providers: [DragAndDropService]\n    };\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbSortable]'\n})\nexport class SortableDirective {\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2\n  ) { }\n\n  @Input('bbsortable') name: string;\n  @Input('bboptions') options: any;\n\n  // Event emitters\n  @Output() orderChanged = new EventEmitter();\n  @Output() bbstart = new EventEmitter();\n  @Output() bbend = new EventEmitter();\n  @Output() bbenter = new EventEmitter();\n  @Output() bbleave = new EventEmitter();\n  @Output() bbdrop = new EventEmitter();\n\n  draggedItem:number;\n  dropTarget:any;\n\n  ngOnInit() {\n      if (!this.options) {\n          this.options = {};\n      }\n  }\n\n  ngAfterContentInit() {\n      this.initChildren();\n  }\n\n  // Dropper listeners\n  @HostListener('dragstart', ['$event']) dragstart(event) {\n      event.dataTransfer.setData('text/plain', event.target['bbvalue'] || null);\n      if (this.options.holdingClass !== undefined) {\n          this.renderer.addClass(event.target, this.options.holdingClass);\n      }\n\n      this.draggedItem = +event.target['bbsortable-index'];\n      this.bbstart.emit(this.draggedItem);\n  }\n\n  @HostListener('dragend', ['$event']) dragend(event) {\n      if (this.options.holdingClass !== undefined) {\n          this.renderer.removeClass(event.target, this.options.holdingClass);\n      }\n      this.bbend.emit(this.draggedItem);\n  }\n\n  // Dropzone listeners\n  @HostListener('dragover', ['$event']) dragover(event:any) {\n      event.preventDefault();\n  }\n\n  @HostListener('dragenter', ['$event']) dragenter(event:any) {\n      if (this.options.hoverClass !== undefined) {\n          if (event.target['bbsortable-name'] === this.name && event.target['bbsortable-index'] !== this.draggedItem) {\n              this.renderer.addClass(event.target, this.options.hoverClass);\n          } else {\n              this.updateDropzoneClass(event, this.options.hoverClass, true);\n          }\n      }\n      this.bbenter.emit(+event.target['bbsortable-index']);\n  }\n\n  @HostListener('dragleave', ['$event']) dragleave(event:any) {\n      if (this.options.hoverClass !== undefined) {\n          if (event.target['bbsortable-name'] === this.name && event.target['bbsortable-index'] !== this.draggedItem) {\n              this.renderer.removeClass(event.target, this.options.hoverClass);\n          } else {\n              this.updateDropzoneClass(event, this.options.hoverClass, false);\n          }\n      }\n      this.bbleave.emit(+event.target['bbsortable-index']);\n  }\n\n  @HostListener('drop', ['$event']) drop(event:any) {\n      event.preventDefault();\n\n      let doDrop:boolean = false;\n\n      let dropTarget:any = event.target;\n      if (dropTarget['bbsortable-name'] !== this.name) {\n          while (dropTarget.parentNode !== null) {\n              if (dropTarget.parentNode['bbsortable-name'] === this.name) {\n                  dropTarget = dropTarget.parentNode;\n                  doDrop = true;\n                  break;\n              } else {\n                  dropTarget = dropTarget.parentNode\n              }\n          }\n      } else {\n          doDrop = true;\n      }\n\n      if (doDrop) {\n          if (this.options.hoverClass !== undefined) {\n              this.renderer.removeClass(dropTarget, this.options.hoverClass);\n          }\n          let draggedItem = this.draggedItem;\n          let newPosition = dropTarget['bbsortable-index'];\n\n          if (draggedItem > newPosition) {\n              for(let i = 0; i < this.el.nativeElement.children.length; i++) {\n                  if (i >= newPosition && i < draggedItem) {\n                      this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-index', i + 1);\n                  }\n\n                  if (i === draggedItem) {\n                      this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-index', newPosition);\n                  }\n              }\n          } else {\n              for(let i = 0; i < this.el.nativeElement.children.length; i++) {\n                  if (i > draggedItem && i <= newPosition) {\n                      this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-index', i - 1);\n                  }\n\n                  if (i === draggedItem) {\n                      this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-index', newPosition);\n                  }\n              }\n          }\n          this.bbdrop.emit(+newPosition);\n          this.orderChanged.emit({ draggedItem, newPosition });\n      }\n  }\n\n  initChildren() {\n      for(let i = 0; i < this.el.nativeElement.children.length; i++) {\n          this.renderer.setProperty(this.el.nativeElement.children[i], 'draggable', true);\n          this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-index', i);\n          this.renderer.setProperty(this.el.nativeElement.children[i], 'bbsortable-name', this.name);\n\n          if (this.options.restingClass) {\n              this.renderer.addClass(this.el.nativeElement.children[i], this.options.restingClass);\n          }\n      }\n  }\n\n  updateDropzoneClass(event:any, cssClass:string, adding:boolean) {\n      let parentNode = event.target.parentNode;\n      while (parentNode !== null) {\n          if (parentNode['bbsortable-name'] === this.name && parentNode['bbsortable-index'] !== this.draggedItem) {\n              if (adding && !parentNode.classList.contains(cssClass)) {\n                  this.renderer.addClass(parentNode, cssClass);\n              } else {\n                  this.renderer.removeClass(parentNode, cssClass);\n              }\n              break;\n          } else {\n              parentNode = parentNode.parentNode;\n          }\n      }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SortableDirective } from './sortable.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SortableDirective,\n  ],\n  exports: [\n    SortableDirective,\n  ]\n})\nexport class BBSortableModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: BBSortableModule,\n      providers: []\n    };\n  }\n }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { BBSlidingPanelModule } from './sliding-panel/index';\r\nimport { BBDropdownMenuModule } from './dropdown-menu/index';\r\nimport { BBSlideoutMenuModule } from './slideout-menu/index';\r\nimport { BBDropdownInputModule } from './dropdown-input/index';\r\nimport { BBHamburgerMenuModule } from './hamburger-menu/index';\r\nimport { BBCollapsingMenuModule } from './collapsing-menu/index';\r\nimport { BBMultiSelectModule } from './multi-select/index';\r\nimport { BBCommonModule } from './common/index';\r\nimport { BBDragAndDropComponentModule } from './drag-and-drop-component/index';\r\nimport { BBTabModule } from './tab/index';\r\nimport { BBDragAndDropModule } from './drag-and-drop/index';\r\nimport { BBSortableModule } from './sortable/index';\r\n\r\nconst BB_MODULES = [\r\n    BBSlidingPanelModule,\r\n    BBDropdownMenuModule,\r\n    BBSlideoutMenuModule,\r\n    BBDropdownInputModule,\r\n    BBHamburgerMenuModule,\r\n    BBCollapsingMenuModule,\r\n    BBMultiSelectModule,\r\n    BBCommonModule,\r\n    BBDragAndDropComponentModule,\r\n    BBTabModule,\r\n    BBDragAndDropModule,\r\n    BBSortableModule,\r\n];\r\n\r\n/**\r\n * This module only exists to allow the demo \r\n * to import the entire library quickly.  It \r\n * should not be used by consumers of the \r\n * library and is not exported as part of \r\n * the distrbuted package.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    BBSlidingPanelModule.forRoot(),\r\n    BBDropdownMenuModule.forRoot(),\r\n    BBSlideoutMenuModule.forRoot(),\r\n    BBDropdownInputModule.forRoot(),\r\n    BBHamburgerMenuModule.forRoot(),\r\n    BBCollapsingMenuModule.forRoot(),\r\n    BBMultiSelectModule.forRoot(),\r\n    BBCommonModule.forRoot(),\r\n    BBDragAndDropComponentModule.forRoot(),\r\n    BBTabModule.forRoot(),\r\n    BBDragAndDropModule.forRoot(),\r\n    BBSortableModule.forRoot(),\r\n    \r\n  ],\r\n  exports: BB_MODULES\r\n})\r\nexport class BBRootModule { }\r\n\r\n@NgModule({\r\n  imports: BB_MODULES,\r\n  exports: BB_MODULES,\r\n})\r\nexport class BearBonesModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {ngModule: BBRootModule, providers: []};\r\n  }\r\n}\r\n"],"names":["InjectionToken","Component","ElementRef","Renderer2","AnimationBuilder","Inject","Input","Injectable","RendererFactory2","Directive","NgModule","CommonModule","trigger","state","style","transition","animate","EventEmitter","ChangeDetectionStrategy","ChangeDetectorRef","Output","fromEvent","merge","filter","map","of","debounceTime","combineLatest","HostBinding","ViewChild","BehaviorSubject","distinctUntilChanged","forwardRef","HostListener","ReflectiveInjector","ViewContainerRef","ComponentFactoryResolver","ViewChildren","ContentChildren","Renderer","NgZone","TemplateRef"],"mappings":";;;;;;;;;;AAAA;;;;AAOA,yBAAa,uBAAuB,GAClC,IAAIA,mBAAc,CAAwC,gCAAgC,CAAC,CAAC;;;;;AAM9F,yBAAa,uBAAuB,GAClC,IAAIA,mBAAc,CAAwC,gCAAgC,CAAC;;;;;;ACf7F;;;;QA4EE,qCACU,OACA,UACA,UAEA,eAAwD,EAExD,eAAwD;YANxD,UAAK,GAAL,KAAK;YACL,aAAQ,GAAR,QAAQ;YACR,aAAQ,GAAR,QAAQ;YAER,oBAAe,GAAf,eAAe,CAAyC;YAExD,oBAAe,GAAf,eAAe,CAAyC;;;;;mCA7CvC,MAAM;SA8C5B;8BAnCO,mDAAU;;;;;;;;;;;0BAAC,KAAmC;gBACxD,IAAG,KAAK,KAAK,IAAI,CAAC,eAAe,EAAE;oBACjC,IAAG,IAAI,CAAC,eAAe,KAAK,MAAM,EAAE;wBAClC,IAAG,IAAI,CAAC,eAAe,KAAK,QAAQ,IAAI,KAAK,KAAK,QAAQ,EAAE;4BAC1D,IAAI,CAAC,kBAAkB,EAAE,CAAC;yBAC3B;6BACI,IAAG,IAAI,CAAC,eAAe,KAAK,QAAQ,IAAI,KAAK,KAAK,QAAQ,EAAE;4BAC/D,IAAI,CAAC,kBAAkB,EAAE,CAAC;yBAC3B;6BACI;4BACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;yBAC7B;qBAEF;yBACI;wBACH,IAAG,KAAK,KAAK,QAAQ,EAAE;4BACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;yBAClE;6BACI,IAAG,KAAK,KAAK,QAAQ,EAAE;4BAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;yBAClE;qBACF;oBACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;;;;;;;;QAcH,8CAAQ;;;YAAR;gBACE,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,OAAO,CAAC,GAAG,CAAC,UAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAG,CAAC,CAAC;gBAEhD,OAAO,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,GAAG,CAAC,MAAM,WAAM,IAAI,CAAC,GAAG,CAAC,MAAQ,CAAC,CAAC;gBAE/D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAEhE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACvB;;;;;;;;;;;;;;;;;;QAUD,4CAAM;;;;;;;;;YAAN,UAAO,KAAc;gBACnB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC;gBACtC,QAAO,KAAK;oBACV,KAAK,MAAM,EAAE;wBACX,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;wBAC3B,MAAM;qBACP;oBACD,KAAK,QAAQ,EAAE;wBACb,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;wBAC3B,MAAM;qBACP;oBACD,KAAK,QAAQ,EAAE;wBACb,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;wBAC3B,MAAM;qBACP;iBACF;aACF;;;;;;QAMO,qDAAe;;;;;;gBACrB,IAAI,CAAC,YAAY;oBACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;yBACtC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAEtC,IAAI,CAAC,YAAY;oBACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;yBACtC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;;;;;;;QAQhC,wDAAkB;;;;;;;gBACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjE,IAAG,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBAAE;gBACpD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;;;;;;;;QAQnB,wDAAkB;;;;;;;gBACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjE,IAAG,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBAAE;gBACpD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;;;;;;QAMnB,0DAAoB;;;;;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;;oBAhKvEC,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,2BAA2B;wBACrC,MAAM,EAAE,CAAC,EAAE,CAAC;wBACZ,UAAU,EAAE,EAAE;wBACd,QAAQ,EAAE,YAAY;qBACvB;;;;;wBAdmCC,eAAU;wBAASC,cAAS;wBACvDC,2BAAgB;wDA+EpBC,WAAM,SAAC,uBAAuB;wDAE9BA,WAAM,SAAC,uBAAuB;;;;0BA9DhCC,UAAK;;0CApBR;;;;;;;ACAA;QAUE,iCAAoB,eAAiC;YAAjC,oBAAe,GAAf,eAAe,CAAkB;SACpD;;;;;;QALD,6CAAW;;;;;YAAX,UAAY,KAAY,EAAE,GAAkB;gBAC1C,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;aAC1B;;;;;;QAKD,sDAAoB;;;;;YAApB,UAAqB,OAAY,EAAE,GAAkB;gBAArD,iBAkBC;gBAjBC,qBAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;gBAEjE,yBAAyB;oBACvB,MAAM,EAAE,UAAC,KAAY;wBACnB,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC,CAAC;qBAC3D;oBACD,GAAG,EAAE,UAAC,KAAY;wBAChB,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC,CAAC;qBACxD;oBACD,SAAS,EAAE;wBACT,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,IAAE,OAAA,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAA,CAAC,CAAC;qBAC5E;oBACD,OAAO,EAAE;wBACP,QAAQ,CAAC,OAAO,EAAE,CAAC;wBACnB,QAAQ,GAAG,IAAI,CAAC;qBACjB;iBACF,EAAA;aACF;;oBA5BFC,eAAU;;;;;wBAHUC,qBAAgB;;;sCAArC;;;;;;;ACAA;;;;QAaE,kCACU,SACA,WACA;YAFA,YAAO,GAAP,OAAO;YACP,cAAS,GAAT,SAAS;YACT,oBAAe,GAAf,eAAe;oCA2BN,UACjB,KAAa,EACb,MAA+B;gBAA/B,uBAAA;oBAAA,aAA+B;;gBAAK,OAAA;oBAClC,IAAG,MAAM,EAAE;wBACT,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACtB;iBACJ;aAAA;mCAEiB,UAChB,KAAa,EACb,MAA+B;gBAA/B,uBAAA;oBAAA,aAA+B;;gBAAK,OAAA;oBAClC,IAAG,MAAM,EAAE;wBACT,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACnB;iBACJ;aAAA;SAxCG;;;;;;;;;;;;QAOJ,+CAAY;;;;;;YAAZ,UACE,OAAY,EACZ,WAAmC;gBAFrC,iBAiBC;gBAbC,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CACpC,UAAC,OAAO,EAAC,SAAS;oBAChB,OAAO,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;yBACrD,MAAM,CACL,UAAC,IAAI,EAAC,OAAO;wBACX,qBAAM,MAAM,GAAG,KAAI,CAAC,OAAO;6BACxB,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;6BACtC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACnB,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;wBACvB,OAAO,IAAI,CAAC;qBACb,EAAC,EAAE,CAAC,CAAC;oBACZ,OAAO,OAAO,CAAC;iBAChB,EAAC,EAAE,CAAC,CAAC;aACP;;;;;;;;;;;;;;QAwBD,4CAAS;;;;;;;YAAT,UACE,SAAiB,EACjB,OAAe,EACf,OAA2B;gBACzB,OAAO,OAAO;oBACZ,OAAO,CAAC,SAAS,CAAC;oBAClB,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;aACjC;;;;;;;;;;QAMD,oDAAiB;;;;;YAAjB,UAAkB,OAA2B;gBAC3C,IAAG,OAAO,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS;wBACpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO;4BAC7C,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;yBACvC,CAAC,CAAA;qBACH,CAAC,CAAC;iBACJ;aACF;;;;;;;;;;;;QAOD,8DAA2B;;;;;;YAA3B,UACE,OAAY,EACZ,WAAwC;gBAF1C,iBAoEC;gBAlEC,4BAAA;oBAAA,gBAAwC;;gBAExC,qBAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;gBACtD,qBAAI,YAAY,GAAW,EAAE,CAAC;gBAC9B,qBAAI,aAA8B,CAAC;gBAEnC,yBAAiC;oBAC7B,IAAI,EAAE,UAAC,KAAY,EAAE,MAA+B;wBAA/B,uBAAA;4BAAA,aAA+B;;wBAClD,YAAY,GAAG,KAAK,CAAC;wBAErB,IAAG,MAAM,EAAE;4BACT,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;yBAC1B;qBACF;oBAED,IAAI,EAAE,UAAC,SAAiB,EAAE,MAA+B;wBAA/B,uBAAA;4BAAA,aAA+B;;wBACvD,IAAG,YAAY,KAAK,SAAS,EAAE;4BAE7B,qBAAM,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,EAAC,OAAO,CAAC,CAAC;4BAElE,IAAG,aAAa,EAAE;gCAChB,aAAa,CAAC,KAAK,EAAE,CAAC;6BACvB;4BAED,IAAG,SAAS,EAAE;gCACZ,aAAa,GAAG,SAAS,CAAC;;;;;gCAM1B,aAAa,CAAC,OAAO,CACnB,KAAI,CAAC,gBAAgB,CAAC,YAAY,EAAC,MAAM,CAAC,CAAC,CAAC;gCAC9C,aAAa,CAAC,MAAM,CAClB,KAAI,CAAC,eAAe,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,CAAC;gCAE1C,aAAa,CAAC,IAAI,EAAE,CAAC;6BACtB;iCAQI;gCACH,IAAG,MAAM,EAAE;oCACT,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oCAC5B,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iCACvB;6BACF;4BAED,YAAY,GAAG,SAAS,CAAC;yBAC1B;wBACD,OAAO,YAAY,CAAC;qBACrB;oBAED,OAAO,EAAE;wBACP,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;wBAChC,aAAa,GAAG,IAAI,CAAC;wBACrB,YAAY,GAAG,IAAI,CAAC;wBACpB,aAAa,GAAG,IAAI,CAAC;wBACrB,OAAO,GAAG,IAAI,CAAC;qBAChB;iBACJ,EAAA;aAEF;;oBAtJFD,eAAU;;;;;wBAVeH,2BAAgB;wBAGjC,uBAAuB;wBAJXI,qBAAgB;;;uCAArC;;;;;;;ACAA;QAmEE,qCACU,OACA,UACA,WACA;YAHA,UAAK,GAAL,KAAK;YACL,aAAQ,GAAR,QAAQ;YACR,cAAS,GAAT,SAAS;YACT,qBAAgB,GAAhB,gBAAgB;SACrB;QAnDL,sBAAa,4CAAG;;;;;;;;gBAAhB,UAAkB,GAAkB;gBAClC,IAAG,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBAEpB,IAAG,IAAI,CAAC,SAAS,EAAE;wBACjB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;wBAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;qBAC1B;oBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CACzD,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClB;aACF;;;WAAA;QAED,sBAAa,8CAAK;;;;gBAAlB,UAAmB,OAAc;gBAC/B,IAAG,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;oBAC7B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;oBAE1B,IAAG,IAAI,CAAC,sBAAsB,EAAE;wBAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;qBACnE;iBACF;aACF;;;WAAA;QAED,sBAAa,oDAAW;;;;gBAAxB,UAAyB,WAAmC;gBAC1D,IAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,EAAE;oBACvC,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;oBAEpC,IAAG,IAAI,CAAC,sBAAsB,EAAE;wBAE9B,IAAG,IAAI,CAAC,SAAS,EAAE;4BACjB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;yBAC5B;wBAED,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;qBACvC;oBAED,IAAI,CAAC,sBAAsB;wBACzB,IAAI,CAAC,SAAS;6BACX,2BAA2B,CAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC9B;aACF;;;WAAA;;;;QASD,8CAAQ;;;YAAR;gBACE,IAAG,IAAI,CAAC,sBAAsB,EAAE;oBAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAClE;aACF;;oBAvEFC,cAAS,SAAC;wBACT,QAAQ,EAAE,sBAAsB;qBACjC;;;;;wBAT0BP,eAAU;wBAAEC,cAAS;wBACvC,wBAAwB;wBAIxB,uBAAuB;;;;0BAgB7BG,UAAK;4BAeLA,UAAK;kCAULA,UAAK;;0CA9CR;;;;;;;ACAA;;;;;;QAaS,+BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,uBAAuB;oBACjC,SAAS,EAAE,CAAC,wBAAwB,EAAE,uBAAuB,CAAC;iBAC/D,CAAC;aACH;;oBAbFI,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,EAAE;qBACd;;sCAXD;;;;;;;ACAA;;;;;;QAuBS,gCAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,wBAAwB;oBAClC,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAtBFD,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,uBAAuB,CAAC,OAAO,EAAE;yBAClC;wBAED,YAAY,EAAE;4BACZ,2BAA2B;4BAC3B,2BAA2B;yBAC5B;wBAED,OAAO,EAAE;4BACP,2BAA2B;4BAC3B,2BAA2B;yBAC5B;qBACF;;uCArBD;;;;;;;;;;;;;;eCCY,OAAO;oBACF,YAAY;qBACX,aAAa;kBAChB,UAAU;oBACR,YAAY;;;;cAIlB,MAAM;eACL,OAAO;YACV,IAAI;cACF,MAAM;;;;;;;ACZjB;;;AAIA;QACI,OAAOC,kBAAO,CAAC,iBAAiB,EAAE;YAC9BC,gBAAK,CAAC,wBAAwB,CAAC,KAAK,EAAEC,gBAAK,CAAC;gBACxC,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHD,gBAAK,CAAC,wBAAwB,CAAC,UAAU,EAAEC,gBAAK,CAAC;gBAC7C,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHD,gBAAK,CAAC,wBAAwB,CAAC,QAAQ,EAAEC,gBAAK,CAAC;gBAC3C,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHC,qBAAU;;;;;;YAMC,wBAAwB,CAAC,KAAK,YAAO,wBAAwB,CAAC,UAAY,EAC7E;gBACJD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,KAAK;iBAC5B,CAAC;gBACFE,kBAAO,CAAC,eAAe,EACnBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,KAAK;iBAChC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACH,wBAAwB,CAAC,UAAU,YAAO,wBAAwB,CAAC,KAAO;;;;2BAM7E;gBACAD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,KAAK;iBAC5B,CAAC;gBACFE,kBAAO,CAAC,gBAAgB,EACpBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,KAAK;iBAEhC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACN,wBAAwB,CAAC,KAAK;gBAC9B,MAAM;gBACN,wBAAwB,CAAC,QAAQ,EAAE;gBACnCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,QAAQ;iBAC/B,CAAC;gBACFE,kBAAO,CAAC,eAAe,EACnBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,QAAQ;iBACnC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACN,wBAAwB,CAAC,QAAQ;gBACjC,MAAM;gBACN,wBAAwB,CAAC,KAAK,EAAE;gBAChCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,QAAQ;iBAC/B,CAAC;gBACFE,kBAAO,CAAC,gBAAgB,EACpBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,QAAQ;iBAEnC,CAAC,CAAC;aACN,CAAC;SAEL,CAAC,CAAC;KACN;;;;AAED;QACI,OAAOF,kBAAO,CAAC,mBAAmB,EAAE;YAChCC,gBAAK,CAAC,wBAAwB,CAAC,KAAK,EAAEC,gBAAK,CAAC;gBACxC,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHD,gBAAK,CAAC,wBAAwB,CAAC,WAAW,EAAEC,gBAAK,CAAC;gBAC9C,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHD,gBAAK,CAAC,wBAAwB,CAAC,UAAU,EAAEC,gBAAK,CAAC;gBAC7C,SAAS,EAAE,WAAW;aACzB,CAAC,CAAC;YACHC,qBAAU,CACN,wBAAwB,CAAC,KAAK;gBAC9B,MAAM;gBACN,wBAAwB,CAAC,WAAW,EAAE;gBACtCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,MAAM;iBAC7B,CAAC;gBACFE,kBAAO,CAAC,eAAe,EACnBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,MAAM;iBACjC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACN,wBAAwB,CAAC,WAAW;gBACpC,MAAM;gBACN,wBAAwB,CAAC,KAAK,EAAE;gBAChCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,MAAM;iBAC7B,CAAC;gBACFE,kBAAO,CAAC,gBAAgB,EACpBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,MAAM;iBAEjC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACN,wBAAwB,CAAC,KAAK;gBAC9B,MAAM;gBACN,wBAAwB,CAAC,UAAU,EAAE;gBACrCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,OAAO;iBAC9B,CAAC;gBACFE,kBAAO,CAAC,eAAe,EACnBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,OAAO;iBAClC,CAAC,CAAC;aACN,CAAC;YACFC,qBAAU,CACN,wBAAwB,CAAC,UAAU;gBACnC,MAAM;gBACN,wBAAwB,CAAC,KAAK,EAAE;gBAChCD,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,OAAO;iBAC9B,CAAC;gBACFE,kBAAO,CAAC,gBAAgB,EACpBF,gBAAK,CAAC;oBACF,SAAS,EAAE,WAAW;oBACtB,kBAAkB,EAAE,OAAO;iBAElC,CAAC,CAAC;aACN,CAAC;SAEL,CAAC,CAAC;KACN;;;;;;AC5JD;;;;;;;;;QAoGE,wBAAoB,KAAwB;YAAxB,UAAK,GAAL,KAAK,CAAmB;;;;;kCAnCD,eAAe,CAAC,IAAI;;;;mCAKpC,IAAIG,iBAAY,EAAc;;;;mCAK9B,IAAIA,iBAAY,EAAc;;;;kCAK/B,IAAIA,iBAAY,EAAc;;;;8BAKlC,IAAIA,iBAAY,EAAc;0BAEpC,KAAK;;;;mCAMwB,wBAAwB,CAAC,KAAK;;;;iCAKhC,wBAAwB,CAAC,KAAK;SAExB;8BAKtC,qCAAS;;;;;gBAClB,QAAQ,IAAI,CAAC,eAAe,KAAK,wBAAwB,CAAC,KAAK;oBAC3D,IAAI,CAAC,aAAa,KAAK,wBAAwB,CAAC,KAAK,EAAE;;;;;;;;;QAMtD,6BAAI;;;;;gBACT,QAAO,IAAI,CAAC,cAAc;oBACxB,KAAK,eAAe,CAAC,IAAI,EAAE;wBACzB,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,UAAU,CAAC;wBAC3D,MAAM;qBACP;oBACD,KAAK,eAAe,CAAC,KAAK,EAAE;wBAC1B,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,WAAW,CAAC;wBAC5D,MAAM;qBACP;oBACD,KAAK,eAAe,CAAC,EAAE,EAAE;wBACvB,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC,QAAQ,CAAC;wBACvD,MAAM;qBACP;oBACD,KAAK,eAAe,CAAC,IAAI,EAAE;wBACzB,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC,UAAU,CAAC;wBACzD,MAAM;qBACP;oBACD,SAAS;wBACP,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,KAAK,CAAC;wBACtD,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC,KAAK,CAAC;wBACpD,MAAM;qBACP;iBACF;gBACD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;;;;;;QAMrB,6BAAI;;;;;gBACT,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,KAAK,CAAC;gBACtD,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC,KAAK,CAAC;gBACpD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;;;;;;QAMrB,+BAAM;;;;;gBACX,IAAG,IAAI,CAAC,SAAS,EAAC;oBAChB,IAAI,CAAC,IAAI,EAAE,CAAC;iBACb;qBACG;oBACF,IAAI,CAAC,IAAI,EAAE,CAAC;iBACb;;;oBAzHJhB,cAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,2BAA2B;wBACrC,MAAM,EAAE,CAAC,EAAE,CAAC;wBACZ,IAAI,EAAE;4BACJ,sBAAsB,EAAC,iBAAiB;4BACxC,oBAAoB,EAAC,eAAe;4BACpC,cAAc,EAAC,WAAW;4BAC1B,gBAAgB,EAAC,YAAY;4BAC7B,gBAAgB,EAAC,QAAQ;4BACzB,cAAc,EAAC,8BAA8B;4BAC7C,cAAc,EAAC,8BAA8B;4BAC7C,aAAa,EAAC,6BAA6B;4BAC3C,SAAS,EAAC,yBAAyB;4BACnC,0BAA0B,EAAC,QAAQ;yBACpC;wBACD,UAAU,EAAE;4BACV,uBAAuB,EAAE;4BACzB,yBAAyB,EAAE;yBAC5B;wBACD,QAAQ,EAAE,gBAAgB;wBAC1B,eAAe,EAAEiB,4BAAuB,CAAC,MAAM;qBAChD;;;;;wBArDCC,sBAAiB;;;;qCA2DhBb,UAAK;sCAKLc,WAAM;sCAKNA,WAAM;qCAKNA,WAAM;iCAKNA,WAAM;;6BArFT;;;;;;;ACAA;;;;;;;QA8EE,8BAAoB,OAAmB;YAAvC,iBACC;YADmB,YAAO,GAAP,OAAO,CAAY;;;;;iCAlCd,KAAK;;;;;+BAMP,KAAK;;;;;uCAMG,KAAK;;;;;;;uCAcG,KAAK;6BA+IhC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,GAAA;6BACjD,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC,CAAC,GAAA;;;;;;+BAOxC,UAAC,UAAyC;gBAC9D,IAAG,UAAU,CAAC,KAAM,EAAE;oBACpB,IAAG,KAAI,CAAC,mBAAmB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE;wBAC9C,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;yBACI;wBACH,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;iBACF;qBACI;oBACH,IAAG,CAAC,KAAI,CAAC,mBAAmB,IAAI,UAAU,CAAC,GAAG,EAAE;wBAC9C,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;yBACI,IAAG,CAAC,UAAU,CAAC,GAAG,EAAC;wBACtB,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;iBACF;gBACD,KAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,GAAG,CAAC;gBAC1C,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC;aACpC;SAjKA;;;;QAED,uCAAQ;;;YAAR;gBAAA,iBA4HC;gBA3HC,IAAG,CAAC,IAAI,CAAC,KAAK,EAAC;oBACb,MAAM,IAAI,KAAK,CAAC,wCAAwC;wBACxC,wCAAwC;wBACxC,+CAA+C,CAAC,CAAC;iBAClE;gBAED,IAAG,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;oBACjE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;iBACzC;;;;;gBAOD,qBAAI,cAAc,GAAGC,cAAS,CAAa,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAE9D,qBAAI,YAAY,GAAGA,cAAS,CAAa,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;gBAC9E,qBAAI,iBAAiB,GAAGA,cAAS,CAAa,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;gBACxF,qBAAI,iBAAiB,GAAGA,cAAS,CAAa,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;gBAExF,qBAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;gBACnE,qBAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;gBAChE,qBAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;;;;;gBAMvD,qBAAI,UAAU,GAAG,iBAAiB;qBAC/B,IAAI,CACHC,eAAK,CAAC,eAAe,CAAC,EACtBC,gBAAM,CAAC,UAAA,CAAC,IAAE,OAAA,KAAI,CAAC,WAAW,GAAA,CAAC,EAC3BC,aAAG,CAAC,UAAA,CAAC,IAAE,OAAA,KAAK,GAAA,CAAC,CAAC,CAAC;;;;;gBAMnB,qBAAI,YAAY,GAAG,iBAAiB;qBACjC,IAAI,CACHF,eAAK,CAAC,kBAAkB,CAAC,EACzBC,gBAAM,CAAC,UAAA,CAAC,IAAE,OAAA,KAAI,CAAC,WAAW,GAAA,CAAC,EAC3BC,aAAG,CAAC,UAAA,CAAC,IAAE,OAAA,IAAI,GAAA,CAAC,CAAC,CAAC;;;;;;gBAOlB,qBAAI,cAAc,GAAG,YAAY;qBAC9B,IAAI,CACHA,aAAG,CAAC,UAAA,CAAC;;;;;;;oBAOH,KAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,OAAO,CAAC,KAAI,CAAC,mBAAmB,CAAA;iBAAE,CAAC,CAAC,CAAC;;;;;;;gBAQ3C,qBAAI,aAAa,GAAG,WAAW;qBAC5B,IAAI,CAACA,aAAG,CAAC,UAAA,CAAC;oBACT,KAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,OAAO,KAAI,CAAC,mBAAmB,CAAA;iBAAE,CAAC,CAAC,CAAC;;;;;;;;gBASxC,qBAAI,gBAAgB,GAAG,cAAc;qBAClC,IAAI,CACHD,gBAAM,CAAC,UAAA,CAAC,IAAE,OAAA,KAAI,CAAC,mBAAmB,GAAA,CAAC,EACnCC,aAAG,CAAC,UAAA,CAAC,IAAE,OAAA,KAAK,GAAA,CAAC,CAAC,CAAC;;;;;gBAMnB,qBAAI,gBAAgB,GAAGC,OAAE,CAAC,IAAI,CAAC,UAAU,CAAC;qBACvC,IAAI,CACHH,eAAK,CAAC,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;;;;;gBAM5D,qBAAI,WAAW,GAAGG,OAAE,CAAC,KAAK,CAAC;qBACxB,IAAI,CACHH,eAAK,CAAC,UAAU,EAAE,YAAY,CAAC;;;;;;;;;yBAW/BI,sBAAY,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;gBAOtB,IAAI,CAAC,oBAAoB;oBACvB,WAAW;yBACR,IAAI,CACHC,uBAAa,CAAC,gBAAgB,CAAC,EAC/BH,aAAG,CAAC,UAAA,MAAM,IAAE,QAAC,EAAC,KAAK,EAAC,MAAM,CAAC,CAAC,CAAC,EAAC,GAAG,EAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAC,CAAC,CAAC;yBACjD,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClC;;;;QAED,0CAAW;;;YAAX;gBACE,IAAG,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;oBACjE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;iBACzC;aACF;;oBA/LFf,cAAS,SAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,IAAI,EAAE;4BACJ,cAAc,EAAC,iBAAiB;4BAChC,gBAAgB,EAAC,kBAAkB;4BACnC,gBAAgB,EAAC,cAAc;4BAC/B,iCAAiC,EAAC,QAAQ;yBAC3C;wBACD,QAAQ,EAAC,sBAAsB;qBAChC;;;;;wBAvBCP,eAAU;;;;4BAgCTI,UAAK,SAAC,yBAAyB;oCAM/BA,UAAK;kCAMLA,UAAK;0CAMLA,UAAK;iCAMLA,UAAK;;mCA9DR;;;;;;;ACAA;;;;;;QAsBS,4BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,oBAAoB;oBAC9B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBArBFI,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBAED,YAAY,EAAE;4BACZ,cAAc;4BACd,oBAAoB;yBACrB;wBAED,OAAO,EAAE;4BACP,cAAc;4BACd,oBAAoB;yBACrB;qBACF;;mCApBD;;;;;;;;;;;;ACAA;QA0CE;kCAZwD,IAAI;+BAE9B,KAAK;iCACH,IAAI;uCACE,IAAI;SAQzB;8BAJN,kCAAM;;;;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;;oBA5B/BV,cAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,qbAYL;wBACL,MAAM,EAAE,CAAC,sMAAsM,CAAC;wBAChN,QAAQ,EAAC,gBAAgB;qBAC1B;;;;;qCAEE2B,gBAAW,SAAC,wBAAwB;kCAEpCtB,UAAK;oCACLA,UAAK;0CACLA,UAAK;4BAELuB,cAAS,SAAC,OAAO;;6BApCpB;;;;;;;ACAA;;;;;;QAoBS,4BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,oBAAoB;oBAC9B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBApBFnB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,oBAAoB;yBACrB;wBAED,YAAY,EAAE;4BACZ,cAAc;yBACf;wBAED,OAAO,EAAE;4BACR,cAAc;yBACd;qBACF;;mCAlBD;;;;;;;;;;;;ACAA;QA8CE;kCAjBwD,IAAI;mCAE1B,IAAI;8BACT,IAAI;uCACK,IAAI;kCACE,OAAO;SAYlC;8BARN,kCAAM;;;;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;QAG9B,sBAAI,qCAAS;;;gBAAb;gBACE,OAAO,IAAI,CAAC,cAAc,KAAK,MAAM,CAAC;aACvC;;;WAAA;;oBAzCFV,cAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,gjBAgBL;wBACL,MAAM,EAAE,CAAC,ofAAof,CAAC;wBAC9f,IAAI,EAAE;4BACJ,oBAAoB,EAAC,WAAW;4BAChC,qBAAqB,EAAC,YAAY;yBACnC;qBACF;;;;;qCAEE2B,gBAAW,SAAC,wBAAwB;sCAEpCtB,UAAK;iCACLA,UAAK;0CACLA,UAAK;qCACLA,UAAK;4BAELuB,cAAS,SAAC,OAAO;;6BApCpB;;;;;;;ACAA;;;;;;QAoBS,4BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,oBAAoB;oBAC9B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBApBFnB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,oBAAoB;yBACrB;wBAED,YAAY,EAAE;4BACZ,cAAc;yBACf;wBAED,OAAO,EAAE;4BACR,cAAc;yBACd;qBACF;;mCAlBD;;;;;;;;;;;;ACAA,yBAwBa,2BAA2B,GAAG,IAAIX,mBAAc,CAAuB,YAAY,CAAC,CAAC;;QA2IhG,yBAC+D,OAA6B,EAClF,KACA;YAFqD,YAAO,GAAP,OAAO,CAAsB;YAClF,QAAG,GAAH,GAAG;YACH,aAAQ,GAAR,QAAQ;kCA/GuC,IAAI;;;;;mCAWlC,IAAI;;;;mCAKJ,EAAE;;;;;;;;;2CAUa,GAAG;;;;;;;;;;;;;;;;;;qCAmBgC,MAAM;;;;qCAKvD,CAAC,CAAC;iCAEN,CAAC,CAAC;;;;;;kCAOC,IAAIiB,iBAAY,EAAgC;gCA2BpD,IAAIA,iBAAY,EAAE;+BACnB,IAAIA,iBAAY,EAAE;iCAEhB,IAAIa,oBAAe,CAAC,KAAK,CAAC;oCAGvB,KAAK;8BACX,KAAK;4BAMC,CAAC;YAaxB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;SACzB;8BAhDU,qCAAQ;;;;;;gBACf,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;;;;;8BAGlB,mCAAM;;;;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;8BASnB,yCAAY;;;;gBACrB,SAAQ,IAAI,CAAC,eAAe,CAAC,aAAiC,GAAE;;;;;;;;QAmClE,kCAAQ;;;YAAR;gBAAA,iBA0CC;gBAxCC,IAAG,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACxC;;;;;;gBAOD,IAAI,CAAC,QAAQ;oBACXT,cAAS,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC;yBAClC,IAAI,CACHG,aAAG,CAAC,UAAC,KAAmB,IAAG,OAAA,EAAC,KAAK,CAAC,MAA0B,GAAE,KAAK,GAAA,CAAC,EACpEE,sBAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAC1CK,8BAAoB,EAAE,CAAC;yBACxB,SAAS,CACN,UAAA,OAAO;wBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;qBACpC,EACL,UAAA,GAAG,IAAE,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,EACrB;;qBAAc,CAAC,CAAC;gBAEpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;qBAC/B,IAAI,CACHP,aAAG,CAAC,UAAA,KAAK,IAAG,OAAA,KAAK,GAAE,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,GAAA,CAAC,CAAC;qBACrC,SAAS,CACR,UAAA,GAAG;oBACD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBAEpB,IAAG,KAAI,CAAC,QAAQ,EAAC;wBACf,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;yBACI;wBACH,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBACnB;oBACD,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;oBAC7B,KAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;iBAC/B,EACD,UAAA,GAAG,IAAE,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,EACrB;;iBAAc,CAAC,CAAC;aACrB;;;;QAED,qCAAW;;;YAAX;gBACE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;aAC1B;;;;;;;;;;;QAMA,6CAAmB;;;;;;YAAnB,UACC,UAAyC;gBACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;gBACpC,IAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAC;oBAC7D,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;aACJ;;;;;;QAMO,2CAAiB;;;;;;gBACrB,qBAAI,WAAyC,CAAC;gBAC9C,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;oBACvB,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC3D;qBACI;oBACD,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;wBAC/B,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;qBAC3D;iBACJ;gBAED,IAAG,WAAW,EAAC;oBACb,IAAI,IAAI,CAAC,eAAe,EAAE;wBACxB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC;qBACjD;oBAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACtC,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;;;;;;;;QAOG,wCAAc;;;;;;sBAAC,KAAa;gBAClC,OAAO;oBACL,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,QAAQ;oBAChE,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,SAAS;iBAC5D,CAAA;;;;;QAIK,wCAAc;;;;;gBACpB,qBAAI,KAAK,GAAG,CAAC,CAAC,CAAC;gBACf,QAAQ,IAAI,CAAC,iBAAiB;oBAC1B,KAAK,MAAM,EAAE;;wBAET,MAAM;qBACT;oBACD,KAAK,MAAM,EAAE;wBACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;4BACxB,KAAK,GAAG,CAAC,CAAC;yBACb;wBACD,MAAM;qBACT;oBACD,KAAK,OAAO,EAAE;wBACZ,IAAI,IAAI,CAAC,iBAAiB,EAAE;4BAC1B,qBAAI,gBAAc,GAAG,CAAC,CAAC,CAAC;4BAExB,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CACpC,UAAC,GAAG,EAAC,CAAC;gCACJ,IAAI,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE;oCAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE;oCACvC,gBAAc,GAAG,CAAC,CAAC;oCACnB,OAAO,IAAI,CAAC;iCACb;6BACF,CAAC,CAAC;4BACH,IAAI,gBAAc,IAAI,CAAC,EAAE;gCACrB,KAAK,GAAG,gBAAc,CAAC;6BAC1B;yBACF;wBACD,MAAM;qBACP;oBACD,KAAK,SAAS,EAAE;wBACd,IAAI,IAAI,CAAC,iBAAiB,EAAE;4BAC1B,qBAAI,gBAAc,GAAG,CAAC,CAAC,CAAC;4BAExB,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CACpC,UAAC,GAAG,EAAC,CAAC;gCACJ,IAAI,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE;qCAC1B,MAAM,CAAC,CAAC,EACP,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;oCACjC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE;oCACzC,gBAAc,GAAG,CAAC,CAAC;oCACnB,OAAO,IAAI,CAAC;iCACb;6BACF,CAAC,CAAC;4BACH,IAAI,gBAAc,IAAI,CAAC,EAAE;gCACrB,KAAK,GAAG,gBAAc,CAAC;6BAC1B;yBACF;wBACD,MAAM;qBACP;oBACD,KAAK,MAAM,EAAE;wBACT,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC/D,KAAK,GAAG,CAAC,CAAC;yBACb;wBACD,MAAM;qBACT;iBACJ;gBAED,IAAI,KAAK,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAE1B,IAAI,KAAK,IAAI,CAAC,EAAE;wBACd,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAChC;;;;;;QAMK,4CAAkB;;;;;gBACxB,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;oBAC/B,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;iBAC7B;;;;;;;QAMK,gDAAsB;;;;;sBAAC,CAAgB;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;QAOpB,4CAAkB;;;;;sBAAC,CAAgB;gBACzC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;;;;;;QAOnB,0CAAgB;;;;;;sBAAC,WAAkB;gBACzC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7D,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;;oBAGrD,IAAI,CAAC,aAAa,IAAI,WAAW,CAAC;;oBAGlC,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;wBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;qBAC1D;yBACI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;wBAC1D,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;qBAC1B;;oBAGD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;;oBAGpD,qBAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC/D,qBAAM,gBAAgB,KAAI,IAAI,CAAC,eAAe,CAAC,aAA+B,EAAC,CAAC;;oBAGhF,qBAAM,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;oBAC7E,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACpB,gBAAgB,CAAC,SAAS,IAAI,UAAU,CAAC,QAAQ,CAAC;qBACrD;iBACJ;;;;;;QAMK,wCAAc;;;;;gBACpB,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;oBAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;oBACrD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;iBACzB;;;;;;;;;;QAUK,+CAAqB;;;;;;;;sBAAC,WAAwB,EAAE,SAAsB;gBAC1E,qBAAM,OAAO,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;gBACpD,qBAAM,OAAO,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;gBAClD,qBAAM,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC;gBAC1C,qBAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC;gBAEhD,qBAAM,UAAU,GAAG;oBACf,MAAM,EAAE,MAAM,IAAI,MAAM;oBACxB,QAAQ,EAAE,CAAC;iBACd,CAAA;gBAED,IAAI,CAAC,MAAM,EAAE;oBACT,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;iBACzD;qBACI,IAAI,CAAC,MAAM,EAAE;oBACd,UAAU,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;iBACtD;gBAED,OAAO,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;QAcrB,mCAAS;;;;;;;;;YAAT,UAAU,CAAgB;gBACvB,QAAQ,CAAC,CAAC,OAAO;oBACb,KAAK,SAAS,CAAC,OAAO;wBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;wBAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,MAAM;oBACV,KAAK,SAAS,CAAC,SAAS;wBACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;wBAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,MAAM;oBACV,KAAK,SAAS,CAAC,KAAK;wBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,MAAM;oBACV;;wBAEI,MAAM;iBACb;aACJ;;;;;QAID,wCAAc;;;;YADd,UACe,CAAa;gBAD5B,iBAYC;gBAVC,IAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,UAAU,CAAC,UAAA,CAAC;wBACV,IAAG,CAAC,KAAI,CAAC,UAAU,EAAC;4BAClB,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;4BAClB,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;4BAC7B,KAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;yBAC/B;qBAAC,EAAC,GAAG,CAAC,CAAC;iBACX;gBACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;;;;;QAGD,uCAAa;;;;YADb,UACc,CAAa;gBACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;;;;;QAED,uCAAa;;;;YAAb,UAAc,CAAa;gBACzB,IAAG,IAAI,CAAC,QAAQ,EAAC;oBACf,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;oBAC7B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;iBAC/B;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;;;;;QAED,wCAAc;;;;YAAd,UAAe,CAAa;gBAA5B,iBAOC;gBANC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,UAAU,CAAC,UAAA,CAAC;oBACV,IAAG,CAAC,KAAI,CAAC,UAAU,EAAC;wBAClB,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;wBAClB,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;qBAC9B;iBAAC,EAAC,GAAG,CAAC,CAAC;aACX;;;;;QAED,6CAAmB;;;;YAAnB,UAAoB,CAA+B;gBACjD,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,CAAC;aACpD;;;;;QAED,2CAAiB;;;;YAAjB,UAAkB,CAA+B;gBAC/C,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,CAAC;gBACnD,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;;oBA/eFvB,cAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,wkBAiBX;wBACC,MAAM,EAAE,CAAC,4OAA4O,CAAC;wBACtP,IAAI,EAAE;4BACJ,YAAY,EAAC,wBAAwB;4BACrC,WAAW,EAAC,uBAAuB;yBACpC;wBACD,QAAQ,EAAC,iBAAiB;wBAC1B,eAAe,EAAEiB,4BAAuB,CAAC,MAAM;qBAChD;;;;;wDA+GIb,WAAM,SAAC2B,eAAU,CAAC,cAAI,OAAA,2BAA2B,GAAA,CAAC;wBA7JrD9B,eAAU;wBAEViB,sBAAiB;;;;qCA8ChBS,gBAAW,SAAC,yBAAyB;+BAKrCtB,UAAK;sCAMLA,UAAK;sCAKLA,UAAK;8CAULA,UAAK;wCAmBLA,UAAK;qCAcLc,WAAM;sCAcNS,cAAS,SAAC,eAAe,EAAE,EAAC,IAAI,EAAE3B,eAAU,EAAC;sCAC7C2B,cAAS,SAAC,OAAO,EAAE,EAAC,IAAI,EAAE3B,eAAU,EAAC;4BAErC2B,cAAS,SAAC,OAAO;2BACjBA,cAAS,SAAC,cAAc;qCAoVxBI,iBAAY,SAAC,gBAAgB,EAAC,CAAC,QAAQ,CAAC;oCAcxCA,iBAAY,SAAC,OAAO,EAAC,CAAC,QAAQ,CAAC;;8BAtelC;;;;;;;;;;;;;;;;ACAA;QAcE;2BAF4B,KAAK;SAEhB;;;;;QAEjB,0CAAO;;;;YAAP,UAAQ,CAAa;gBACnB,IAAG,IAAI,CAAC,OAAO,EAAE;oBACf,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;iBACnB;aACF;;;;;QAED,yCAAM;;;;YAAN,UAAO,CAAa;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACnB;;oBAtBFxB,cAAS,SAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,IAAI,EAAE;4BACJ,SAAS,EAAC,iBAAiB;4BAC3B,QAAQ,EAAC,gBAAgB;yBAC1B;qBACF;;;;;4BAEEH,UAAK,SAAC,wBAAwB;8BAC9BA,UAAK;;uCAZR;;;;;;;ACAA;;;;QA2BI,qCAAsB,KAAuB,EACvB,QAAkC;YADlC,UAAK,GAAL,KAAK,CAAkB;YACvB,aAAQ,GAAR,QAAQ,CAA0B;8BAP/B,EAAE;SAQ1B;QAND,sBAA0C,sDAAa;;;;gBAAvD,UAAwD,QAA8B;gBACpF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAChC;;;WAAA;;;;;QAMS,qDAAe;;;;YAAzB,UAA0B,QAA8B;gBACtD,IAAI,CAAC,QAAQ,EAAE;oBACb,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;iBAC/B;gBAED,qBAAI,cAAc,GAAU,EAAE,CAAA;gBAE9B,IAAI,QAAQ,CAAC,SAAS,EAAE;oBACtB,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAClD,UAAC,QAAa;wBACZ,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;qBACtE,CAAC,CAAC;iBACN;gBAED,qBAAI,QAAQ,GACV4B,uBAAkB;qBACf,qBAAqB,CACpBA,uBAAkB,CAAC,OAAO,CAAC,cAAc,CAAC,EAC1C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAEjC,qBAAI,OAAO,GACT,IAAI,CAAC,QAAQ;qBACV,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC;qBAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAEpC,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACnB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAC9B,UAAA,KAAK;wBACH,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAClD,CACF,CAAA;iBACF;gBAED,OAAO,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;aAC/B;;oBA1DJzB,cAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAC,aAAa;qBACvB;;;;;wBARG0B,qBAAgB;wBANhBC,6BAAwB;;;;oCAoBvB9B,UAAK,SAAC,sBAAsB;;0CAvBjC;;;;;;;ACAA;;;;oBAICI,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;wBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;qBACvC;;uCAVD;;;;;;;ACAA;QAmEI,kCAAoB,QAA2B;YAA3B,aAAQ,GAAR,QAAQ,CAAmB;kCA7BqB,IAAI;yCAEH,EAAE;iCAgBtC,IAAIM,iBAAY,EAAiC;qCAE7C,IAAIA,iBAAY,EAAgC;iCAEpD,IAAIA,iBAAY,EAAgC;oCAInD,EAAE;gCACN,EAAE;SAG3B;8BAlBU,kDAAY;;;;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAA,EAAE;oBAClC,SAAQ,EAAE,CAAC,OAAO,CAAC,aAA8B,GAAE;iBACtD,CAAC,CAAC;;;;;;;;;;QAiBA,kDAAe;;;;;sBAAC,KAAY,EAAE,QAAiB;gBAClD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAC,QAAQ,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;;;;;;;QAG3B,sDAAmB;;;;;sBAAC,KAAa,EAAE,QAAiB;gBACvD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAC,QAAQ,CAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;;;;;QAGlC,kDAAe;;;YAAf;gBAAA,iBAqBC;;gBAnBG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC,CAAC;gBAEnE,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;iBACvC;gBAED,IAAI,CAAC,gBAAgB;oBACjB,IAAI,CAAC,0BAA0B;yBAC1B,OAAO;yBACP,SAAS,CACN,UAAA,OAAO;wBACH,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;wBAC3B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wBACvB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;qBAC9C,EACD,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAA,EACrC;wBACI,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAA;qBACtC,CAAC,CAAC;aAClB;;;;QAED,8CAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;iBACvC;aACJ;;;;;;QAED,kDAAe;;;;;YAAf,UACI,CAAa,EACb,KAAa;gBACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACpB,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,KAAK;iBACf,CAAC,CAAC;aACN;;;;;;QAED,sDAAmB;;;;;YAAnB,UACI,CAAa,EACb,KAAa;gBACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;oBACxB,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,KAAK;iBACf,CAAC,CAAC;aACN;;oBA3GJhB,cAAS,SAAC;wBACP,QAAQ,EAAC,kCAAkC;wBAC3C,QAAQ,EAAE,oZAWb;wBACG,MAAM,EAAE,CAAC,EAAE,CAAC;wBACZ,eAAe,EAAEiB,4BAAuB,CAAC,MAAM;qBAClD;;;;;wBAxBGC,sBAAiB;;;;qCA0BhBS,gBAAW,SAAC,oCAAoC;4CAEhDtB,UAAK;iDAIL+B,iBAAY,SAAC,WAAW;gCAGxBA,iBAAY,SAAC,UAAU,EAAC,EAAC,IAAI,EAACF,qBAAgB,EAAC;oCAS/Cf,WAAM;wCAENA,WAAM;oCAENA,WAAM;;uCA5DX;;;;;;;ACAA;;;;;;QA0BS,6BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,qBAAqB;oBAC/B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAvBFV,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,oBAAoB;4BACpB,wBAAwB;yBACzB;wBAED,YAAY,EAAE;4BACZ,eAAe;4BACf,wBAAwB;4BACxB,wBAAwB;yBACzB;wBAED,OAAO,EAAE;4BACR,eAAe;yBACf;qBACF;;oCAxBD;;;;;;;;;;;;ACAA;QAMI,oBACY;YAAA,mBAAc,GAAd,cAAc;SAAuB;;oBALpDF,cAAS,SAAC;wBACP,QAAQ,EAAE,gBAAgB;qBAC7B;;;;;wBAJgC0B,qBAAgB;;;yBAAjD;;;;;;;ACAA;QAMI;SAAiB;;oBAJpB1B,cAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;qBACnC;;;;8BAJD;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;QAyJE;kCAxEyD,IAAI;;;;;+BAqCtC,KAAK;;;;;uCAMG,IAAI;;;;;iCAMV,IAAI;;;;;6BAMT,KAAK;;;;;;;4BAQP,KAAK;SAUtB;8BA3DU,4CAAe;;;;;;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;8BAMrD,mCAAM;;;;;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;;;;QAqD9B,kCAAQ;;;YAAR;;;;;;;;;;;;gBAYE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;;;;;gBAM1C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC;gBAE9D,IAAG,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;iBAClC;aACF;;;;QAED,yCAAe;;;YAAf;gBAAA,iBAaC;;;;gBATC,IAAI,CAAC,oBAAoB;oBACvBY,cAAS,CAAC,MAAM,EAAC,QAAQ,CAAC;yBACzB,IAAI,CACHG,aAAG,CAAC,UAAA,CAAC,IAAE,OAAA,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,OAAO,GAAA,CAAC,EACrDO,8BAAoB,EAAE,CAAC;yBACxB,SAAS,CAAC,UAAA,QAAQ;wBACf,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBACzB,KAAI,CAAC,gBAAgB,EAAE,CAAC;qBAC3B,CAAC,CAAC;aACN;;;;QAED,qCAAW;;;YAAX;gBACE,IAAG,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;oBACjE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;iBACzC;aACF;;;;;;;QAOO,0CAAgB;;;;;;;gBACtB,IAAG,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACjC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBACzB;qBACI;oBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC1C,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBACzB;;;oBAxKJ9B,cAAS,SAAC;wBACT,QAAQ,EAAE,gDAAgD;wBAC1D,QAAQ,EAAE,mxBAuBL;wBACL,MAAM,EAAE,CAAC,moCAAmoC,CAAC;wBAC7oC,IAAI,EAAE;4BACJ,kBAAkB,EAAE,UAAU;4BAC9B,mBAAmB,EAAE,WAAW;yBACjC;wBACD,QAAQ,EAAC,iBAAiB;qBAC3B;;;;;qCAEE2B,gBAAW,SAAC,yBAAyB;4BAErCC,cAAS,SAAC,OAAO;6BACjBA,cAAS,SAAC,QAAQ;4BAElBS,oBAAe,SAAC,UAAU,EAAE,EAAE,IAAI,EAACpC,eAAU,EAAE,WAAW,EAAC,IAAI,EAAE;iCAEjEoC,oBAAe,SAAC,eAAe,EAAE,EAAC,IAAI,EAACpC,eAAU,EAAE,WAAW,EAAC,IAAI,EAAC;oCAwBpEI,UAAK;kCAMLA,UAAK;0CAMLA,UAAK;;8BA5HR;;;;;;;ACAA;;;;;;QAgBS,sBAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,cAAc;oBACxB,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAjBFI,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,UAAU;yBACX;wBACD,OAAO,EAAE;4BACP,UAAU;yBACX;qBACF;;6BAdD;;;;;;;ACAA;;;;;;QAyBS,6BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,qBAAqB;oBAC/B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAvBFD,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,oBAAoB;4BACpB,cAAc;yBACf;wBAED,YAAY,EAAE;4BACZ,eAAe;4BACf,eAAe;yBAChB;wBAED,OAAO,EAAE;4BACP,eAAe;4BACf,eAAe;yBAChB;qBACF;;oCAvBD;;;;;;;;;;;;ACAA;QAgHE,0BACU,UACA,gBACA;YAFA,aAAQ,GAAR,QAAQ;YACR,mBAAc,GAAd,cAAc;YACd,SAAI,GAAJ,IAAI;kCArE4C,IAAI;;;;;iCAMrC,IAAI;;;;;+BAMN,KAAK;;;;;uCAMG,IAAI;+BA8CrB,KAAK;SAKQ;8BAtChB,oCAAM;;;;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;8BAWlB,0CAAY;;;;;;;;;;;gBACtB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;qBACxB,MAAM,CAAC,UAAA,EAAE,IAAG,OAAA,EAAE,CAAC,aAAa,KAAK,KAAI,CAAC,cAAc,CAAC,aAAa,GAAA,CAAC,CAAC;;;;;8BAG7D,qCAAO;;;;gBACjB,yBAAO,IAAI,CAAC,cAAc,CAAC,aAA+B,EAAC;;;;;8BAGjD,0CAAY;;;;gBACtB,yBAAO,IAAI,CAAC,cAAc,CAAC,aAA+B,EAAC;;;;;8BAGjD,0CAAY;;;;gBACtB,yBAAO,IAAI,CAAC,cAAc,CAAC,aAA+B,EAAC;;;;;8BAGjD,uCAAS;;;;gBACnB,yBAAO,IAAI,CAAC,MAAM,CAAC,aAA+B,EAAC;;;;;;;;QAUrD,0CAAe;;;YAAf;gBACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;;;;;;;QAOO,4CAAiB;;;;;;;;gBACrB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAO,EAAE,CAAC,aAAa,CAAA,EAAE,CAAC,CAAC,CAAC;gBAE1D,IAAG,IAAI,CAAC,uBAAuB,EAAE,EAAE;oBAEjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;wBACZ,UAAU,CAAC;4BACT,KAAI,CAAC,WAAW,GAAG,IAAI,CAAA;yBAAC,CAAC,CAAA;qBAAC,CAAC,CAAC;oBAEhC,qBAAM,eAAe,IAClB,IAAI,CAAC,OAAO,CAAC,UAAU;wBACxB,IAAI,CAAC,OAAO,CAAC,WAAW;wBACxB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;oBAE9B,qBAAI,oBAAkB,GAAG,MAAM,CAAC,iBAAiB,CAAC;oBAClD,qBAAI,cAAc,GAAG,CAAC,CAAC;;oBAGvB,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAChD,qBAAM,GAAG,KAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAA4B,EAAC,CAAC;wBAChE,qBAAM,cAAc,IAAI,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;;;wBAIpF,cAAc,GAAG,cAAc,GAAG,eAAe,CAAC;wBAElD,IAAG,cAAc,GAAG,CAAC,EAAE;4BACrB,oBAAkB,GAAG,CAAC,CAAC;4BACvB,MAAM;yBACP;qBACF;;oBAGD,IAAI,oBAAkB,IAAI,CAAC,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,EAAE,IAAG,OAAO,EAAE,CAAC,aAAa,CAAA,EAAC,CAAC,CAAC,CAAC;qBAC3D;yBAGI;wBACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAC1C,IAAI,CAAC,YAAY;6BACd,MAAM,CAAC,UAAC,EAAE,EAAC,KAAK;4BACf,QAAQ,KAAK,IAAI,oBAAkB,EAAC;yBAAC,CAAC;6BACvC,GAAG,CAAC,UAAA,EAAE,IAAG,OAAO,EAAE,CAAC,aAAa,CAAA,EAAC,CAAC,CAAC,CAAC;qBAC5C;iBACF;qBACI;oBACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;wBACZ,UAAU,CAAC;4BACT,KAAI,CAAC,WAAW,GAAG,KAAK,CAAA;yBAAC,CAAC,CAAA;qBAAC,CAAC,CAAC;iBAClC;;;;;;QAMG,kDAAuB;;;;;gBAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC,KAAK;oBACpD,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;;;;;;;;;QAO/C,yCAAc;;;;YAAd;gBACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;;oBAlLFV,cAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,gkBAmBL;wBACL,MAAM,EAAE,CAAC,+UAA+U,CAAC;wBACzV,IAAI,EAAC;4BACH,iBAAiB,EAAE,kBAAkB;yBACtC;wBACD,QAAQ,EAAE,kBAAkB;qBAC7B;;;;;wBAnCCsC,aAAQ;wBAJRrC,eAAU;wBAOVsC,WAAM;;;;qCAkCLZ,gBAAW,SAAC,0BAA0B;oCAMtCtB,UAAK;kCAMLA,UAAK;0CAMLA,UAAK;4BAELgC,oBAAe,SAAC,UAAU,EAAE,EAAC,IAAI,EAACpC,eAAU,EAAE,WAAW,EAAE,KAAK,EAAC;qCAEjE2B,cAAS,SAAC,gBAAgB,EAAE,EAAC,IAAI,EAAC3B,eAAU,EAAC;qCAE7C2B,cAAS,SAAC,gBAAgB,EAAE,EAAC,IAAI,EAAC3B,eAAU,EAAC;6BAE7C2B,cAAS,SAAC,QAAQ,EAAE,EAAC,IAAI,EAAC3B,eAAU,EAAC;4BAGrC2B,cAAS,SAAC,OAAO;;+BA3EpB;;;;;;;ACAA;;;;;;QAgBS,8BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,sBAAsB;oBAChC,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAfFnB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZ,cAAc;4BACd,oBAAoB;yBACrB;wBACD,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;qCAdD;;;;;;;;;;;;ACAA;QAuDI;mCAlB2B,WAAW;uCACP,GAAG;gCAcT,IAAIM,iBAAY,EAAqB;kCACnC,IAAIA,iBAAY,EAAqB;YAG5D,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,+DAA+D,CAAC,CAAC;SAChF;QAhBD,sBAAI,2CAAO;;;gBAAX;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAA,EAAC,CAAC,CAAC;aACrE;;;WAAA;QAED,sBAAI,8CAAU;;;gBAAd;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAA,EAAC,CAAC,CAAC;aACpE;;;WAAA;;;;QAYD,yCAAQ;;;YAAR;gBAAA,iBAiGC;gBAhGGI,cAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC;qBACjD,IAAI,CACDG,aAAG,CAAC,UAAC,KAAmB,IAAG,OAAA,EAAC,KAAK,CAAC,MAA0B,GAAE,KAAK,GAAA,CAAC,EACpEE,sBAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,EACtCK,8BAAoB,EAAE,CAAC;qBAC1B,SAAS,CACN,UAAA,UAAU,IAAG,OAAA,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAA,CAC5C,CAAC;;gBAGF,IAAG,CAAC,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,cAAc,GAAG;wBAClB;4BACI,IAAI,EAAE,MAAM;4BACZ,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,eAAe;4BACrB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,eAAe;4BACrB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,YAAY;4BAClB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,cAAc;4BACpB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,eAAe;4BACrB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,YAAY;4BAClB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,cAAc;4BACpB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,WAAW;4BACjB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,gBAAgB;4BACtB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,kBAAkB;4BACxB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;wBACD;4BACI,IAAI,EAAE,cAAc;4BACpB,OAAO,EAAE,EAAE;4BACX,QAAQ,EAAE,KAAK;yBAClB;qBACJ,CAAC;iBACL;gBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC;;;;;QAED,gDAAe;;;;YAAf,UAAgB,IAAuB;gBACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;;;;;QAED,mDAAkB;;;;YAAlB,UAAmB,IAAuB;gBACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;;;;;QAED,4CAAW;;;;YAAX,UAAY,IAAY;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACrB;;oBA/JJ9B,cAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,4pBAmBP;wBACH,MAAM,EAAE,CAAC,6VAA6V,CAAC;qBAC1W;;;;;sCAEIK,UAAK;0CACLA,UAAK;qCAELA,UAAK;kCAULuB,cAAS,SAAC,QAAQ;mCAElBT,WAAM;qCACNA,WAAM;;qCArDX;;;;;;;ACAA;;;;;;QAkBS,2BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,mBAAmB;oBAC7B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAnBFV,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBAED,YAAY,EAAE;4BACZ,sBAAsB;yBACvB;wBAED,OAAO,EAAE;4BACP,sBAAsB;yBACvB;qBACF;;kCAhBD;;;;;;;;;;;;;;;;ACEA,+BAAkC,GAAiB;QAC/C,IAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACnB,GAAG,CAAC,WAAW,EAAE,CAAC;SACrB;KACJ;;;;;;;;;;;ACND,IAAO,qBAAM,SAAS,GAAG,QAAQ,CAAC;;;;;;ACAlC;QAKE;SAAiB;;oBAHlBJ,eAAU;;;;mCAFX;;;;;;;ACAA;;;;;;;;;QA2FE,8BACU,YACA;YADA,eAAU,GAAV,UAAU;YACV,gBAAW,GAAX,WAAW;qCArES,IAAIU,iBAAY,EAAoB;mCACtC,IAAIA,iBAAY,EAAW;;;;mCAsD7B,KAAK;;;;2BAKb,IAAI,gBAAgB,EAAE;SAWvC;8BAjEU,gDAAc;;;;;gBACvB,OAAO,IAAI,CAAC,eAAe,CAAC;;;;;8BAMnB,sDAAoB;;;;;gBAC7B,OAAO,IAAI,CAAC,WAAW,CAAC;;;;;8BA0Bd,2CAAS;;;;;0BAAC,OAAgB;gBACpC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;gBAE/B,IAAG,IAAI,CAAC,eAAe,EAAE,CAMxB;;;;;;;;;;;;QA2BH,uCAAQ;;;;YAAR;;;;;;;aAOC;;;;;;;;QAKD,0CAAW;;;;YAAX;gBACE,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC9C,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC7C;;;;;;;;;;QAMD,wDAAyB;;;;;YAAzB,UAA0B,IAA0B;gBAApD,iBAsEC;gBArEC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,qBAAI,MAAM,IAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAgB,CAAA,CAAC;gBAE9C,MAAM,CAAC,YAAY,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;gBAExC,IAAI,CAAC,qBAAqB;oBACxBI,cAAS,CAAY,MAAM,EAAC,WAAW,CAAC;yBACrC,SAAS,CAAC,UAAC,KAAgB;wBAC1B,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAC,aAAa,CAAC,CAAC;;;;wBAKpD,qBAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC;wBACpD,qBAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACrC,qBAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;wBACrC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAEjB,qBAAI,CAAC,GAAqB;4BACxB,IAAI,EAAE,KAAI,CAAC,gBAAgB;4BAC3B,WAAW,EAAE;gCACX,OAAO,EAAE,KAAK,CAAC,OAAO,GAAG,CAAC;gCAC1B,OAAO,EAAE,KAAK,CAAC,OAAO,GAAG,CAAC;6BAC3B;yBACF,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;wBA8BD,UAAU,CAAC;4BACT,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;yBAC/B,CAAC,CAAC;qBACJ,EACD,UAAA,GAAG,IAAE,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,EACrB,eAAM,CAAC,CAAC;gBAEZ,IAAI,CAAC,mBAAmB;oBACxBA,cAAS,CAAC,MAAM,EAAC,SAAS,CAAC;yBACtB,SAAS,CAAC,UAAC,KAAgB;;;wBAE1B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;qBAClD,EACD,UAAA,GAAG,IAAE,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,EACrB,eAAM,CAAC,CAAC;aACb;;oBA3KFZ,cAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;qBAC1B;;;;;wBARQ,oBAAoB;wBAR3BgC,gBAAW;;;;wCAkBVrB,WAAM;sCACNA,WAAM;;mCAzBT;;QAoMA;;6BAC0B,IAAI;;+BArM9B;QAsMC;;;;;;ACtMD;QA8CE,yCACU,YACA;YAFV,iBAKC;YAJS,eAAU,GAAV,UAAU;YACV,mBAAc,GAAd,cAAc;0CAbiC,EAAE;qCACf,EAAE;6CAEmB;gBAC/D,QAAQ,EAAE,CAAC,CAAC;gBACZ,SAAS,EAAE,CAAC,CAAC;gBACb,gBAAgB,EAAE,IAAI;aACvB;gCAE2C,IAAI,CAAC,yBAAyB;;;;;;iCAsD1D,UAAC,SAA+B,EAAE,KAAa;gBAC7D,qBAAI,eAAe,GACjB,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAA;gBACtE,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAClD,SAAS,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;gBACrD,KAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3D,KAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxD;;;;;+BAMa,UAAC,KAAuB;gBACpC,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC;gBAC7C,qBAAI,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACpC,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC;aACjD;;;;;6BAMW,UAAC,IAA0B;;gBAErC,OAAO;aACR;+BAEa,UAAC,KAAe;gBAC5B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;gBACvC,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;8BAEY,UAAC,KAAe;gBAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;gBAExB,qBAAI,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;gBAC/C,qBAAI,WAAW,GAAyB,IAAI,CAAC;gBAC7C,qBAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,qBAAI,gBAAgB,GAAG,CAAC,CAAC;gBAEzB,KAAI,CAAC,sBAAsB;qBAUxB,MAAM,CAAC,UAAA,IAAI,IAAE,OAAA,IAAI,KAAG,KAAI,CAAC,cAAc,CAAC,IAAI,GAAA,CAAC;qBAC7C,GAAG,CAAC,UAAA,IAAI;oBACP,qBAAI,OAAO,KAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAgB,EAAC,CAAC;oBACjD,qBAAI,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;oBAC3C,OAAO;wBACL,IAAI,EAAE,IAAI;wBACV,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wBAC/B,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;qBAChC,CAAA;iBAAC,CAAC;qBACJ,OAAO,CAAC,UAAC,iBAAiB,EAAE,CAAC;oBAC5B,qBAAI,EAAE,GAAG,KAAI,CAAC,2BAA2B,CACvC,iBAAiB,CAAC,CAAC,EACnB,KAAK,CAAC,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAE3D,OAAO,CAAC,GAAG,CAAI,CAAC,WAAM,EAAE,cAAS,iBAAiB,CAAC,CAAC,WAAM,KAAK,CAAC,OAAO,WAAM,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAS,CAAC,CAAA;oBAEvH,qBAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBAE5B,IAAG,QAAQ,GAAG,gBAAgB,EAAE;wBAC9B,gBAAgB,GAAG,QAAQ,CAAC;wBAC5B,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC;wBACrC,YAAY,GAAG,CAAC,CAAC;;;;wBAKjB,gBAAgB,GAAG,CAAC,EAAE,GAAG,CAAC,IAAG,YAAY,GAAG,CAAC,GAAE,YAAY,GAAG,CAAC,CAAC;wBAEhE,KAAI,CAAC,YAAY,GAAG;4BAClB,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC,gBAAgB,CAAC;4BACjD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC,gBAAgB,CAAC;4BAClD,gBAAgB,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI;yBAC3C,CAAC;qBACH;iBACF,CAAC,CAAC;gBAEL,KAAK,CAAC,cAAc,EAAE,CAAC;;;;;;;;;;aAWxB;0BAEQ,UAAC,KAAe;gBACvB,KAAI,CAAC,YAAY,CAAC,MAAM,CACtB,KAAI,CAAC,YAAY,CAAC,gBAAgB,EAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAE/B,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAChC,KAAI,CAAC,YAAY,CAAC,SAAS,EAC3B,CAAC,oBACD,KAAI,CAAC,YAAY,CAAC,gBAAwC,EAAC,CAAC;aAC/D;YAlKC,OAAO,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAA;SAC7D;;;;QAED,kDAAQ;;;YAAR;gBACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC3BC,cAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,WAAW,CAAC;qBACrD,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAEhC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC3BA,cAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,UAAU,CAAC;qBACpD,IAAI,CACHK,sBAAY,CAAC,EAAE,CAAC,CAAC;qBAClB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAE/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC3BL,cAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,UAAU,CAAC;qBACpD,SAAS,CAAC,UAAC,CAAO;oBACjB,OAAA,CAAC,CAAC,cAAc,EAAE;iBAAA,CAAC,CAAC,CAAC;gBAEzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC3BA,cAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,MAAM,CAAC;qBAChD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5B;;;;QAED,4DAAkB;;;YAAlB;gBACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC3B,IAAI,CAAC,YAAY;qBACd,OAAO;qBACP,SAAS,CAAC,UAAC,UAAiC;iBAC5C,CAAC,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC3C;;;;QAED,qDAAW;;;YAAX;gBACE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAA,GAAG;oBAChC,IAAG,CAAC,GAAG,CAAC,MAAM,EAAE;wBACd,GAAG,CAAC,WAAW,EAAE,CAAC;qBACnB;iBACF,CAAC,CAAA;aACH;;;;;;;QAgIO,qEAA2B;;;;;;sBAAC,EAAU,EAAE,EAAU;gBACxD,OAAO,EAAE,GAAG,EAAE,CAAC;;;;;;;;;;QAUT,qEAA2B;;;;;;;;sBAAC,EAAU,EAAC,EAAU,EAAC,EAAU,EAAC,EAAU;gBAC7E,OAAO,IAAI,CAAC,IAAI,CACd,SAAA,IAAI,CAAC,2BAA2B,CAAC,EAAE,EAAC,EAAE,CAAC,EAAE,CAAC,CAAA;oBAC1C,SAAA,IAAI,CAAC,2BAA2B,CAAC,EAAE,EAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAC,CAAC;;;oBApNjDpB,cAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,4EAGX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBAVQ,oBAAoB;wBAZ3BC,eAAU;;;;mCAwBToC,oBAAe,SAAC,oBAAoB;mCACpCT,cAAS,SAAC,cAAc,EAAE,EAAC,IAAI,EAAEM,qBAAgB,EAAC;;8CA/BrD;;;;;;;ACAA;;;;;;QAqBS,oCAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,4BAA4B;oBACtC,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBApBFzB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,+BAA+B;4BAC/B,oBAAoB;yBACrB;wBACD,OAAO,EAAE;4BACP,+BAA+B;4BAC/B,oBAAoB;yBACrB;wBACD,SAAS,EAAE,CAAC,oBAAoB,CAAC;qBAClC;;2CAnBD;;;;;;;;;;;;ACAA;QAOE;6BAHoB,EAAE;2BACZ,EAAE;SAEK;;oBALlBJ,eAAU;;;;yBAFX;;;;;;;ACAA;QAOE,sBACS,IACA,UACA;YAFA,OAAE,GAAF,EAAE;YACF,aAAQ,GAAR,QAAQ;YACR,eAAU,GAAV,UAAU;+BAQK,IAAIU,iBAAY,EAAE;6BACpB,IAAIA,iBAAY,EAAE;SARnC;;;;QAUL,+BAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,SAAS,EAAE,CAAC;iBACpB;aACJ;;;;;QAEkC,8BAAO;;;;YAA1C,UAA2C,KAAK;gBAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;;;;QAED,gCAAS;;;YAAT;gBACI,qBAAI,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC;gBACrD,qBAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAE9C,qBAAI,kBAAkB,GAAG,MAAM,CAAC;gBAChC,qBAAI,iBAAiB,GAAG,MAAM,CAAC;;;gBAI/B,IAAI,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE;oBAC7C,kBAAkB,GAAG,QAAQ,CAAC;oBAC9B,iBAAiB,GAAG,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;iBAClE;gBAED,IAAI,IAAI,CAAC,WAAW,EAAE;oBAClB,kBAAkB,GAAG,KAAK,CAAC;iBAC9B;gBAED,IAAI,KAAK,EAAE;oBACP,IAAI,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE;wBACrC,kBAAkB,GAAG,OAAO,CAAC;qBAChC;iBACJ;;gBAGD,IAAI,kBAAkB,KAAK,KAAK,EAAE;oBAC9B,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnD,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;4BACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;4BACxE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;yBAC1E;qBACJ;oBACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;oBACnE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;iBACnE;qBAAM,IAAI,kBAAkB,KAAK,OAAO,EAAE;oBACvC,qBAAI,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC;oBAC5D,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnD,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;4BACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;4BACxE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;yBACtF;qBACJ;oBACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;oBACnE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;iBAEnD;qBAAM,IAAI,kBAAkB,KAAK,QAAQ,EAAE;oBACxC,qBAAI,iBAAiB,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC;oBACrE,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnD,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;4BACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;4BACxE,IAAI,iBAAiB,KAAK,KAAK,EAAE;gCAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;6BAC3E;iCAAM,IAAI,iBAAiB,KAAK,OAAO,EAAE;gCACtC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;6BACvF;yBACJ;qBACJ;oBACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;oBACnE,IAAI,iBAAiB,KAAK,KAAK,EAAE;wBAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;qBACpE;yBAAM,IAAI,iBAAiB,KAAK,OAAO,EAAE;wBACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;qBAChF;iBACJ;qBAAM;;oBAEH,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnD,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;4BACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;yBAC3E;qBACJ;oBACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;iBACtE;gBACD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;gBACjE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrC;;oBA1GFR,cAAS,SAAC;wBACT,QAAQ,EAAE,SAAS;qBACpB;;;;;wBALmBP,eAAU;wBAAEC,cAAS;wBAChC,UAAU;;;;8BAYhBG,UAAK,SAAC,OAAO;6BACbA,UAAK,SAAC,UAAU;6BAChBA,UAAK,SAAC,UAAU;kCAChBA,UAAK,SAAC,eAAe;kCAErBc,WAAM;gCACNA,WAAM;8BAUNa,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;2BA7BnC;;;;;;;ACAA;QAOE,6BACS,IACA,UACA;YAFA,OAAE,GAAF,EAAE;YACF,aAAQ,GAAR,QAAQ;YACR,eAAU,GAAV,UAAU;SACd;;;;QAKL,sCAAQ;;;YAAR;gBACI,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;;;;QAED,uCAAS;;;YAAT;gBACI,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;;;;QAED,2CAAa;;;YAAb;gBACI,qBAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,MAAM,CAAC;gBAC9F,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;aACvE;;oBAxBAxB,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;qBAC3B;;;;;wBALmBP,eAAU;wBAAEC,cAAS;wBAChC,UAAU;;;;2BAYhBG,UAAK,SAAC,cAAc;6BACpBA,UAAK,SAAC,UAAU;;kCAdnB;;;;;;;ACAA;;;;;;QAuBS,mBAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,WAAW;oBACrB,SAAS,EAAE,CAAC,UAAU,CAAC;iBACxB,CAAC;aACH;;oBArBFI,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBAED,YAAY,EAAE;4BACZ,YAAY;4BACZ,mBAAmB;yBACpB;wBAED,OAAO,EAAE;4BACP,YAAY;4BACZ,mBAAmB;yBACpB;qBACF;;0BArBD;;;;;;;;;;;;ACAA;QAUE;6BAF2B,EAAE;SAEZ;;oBARlBJ,eAAU;;;;iCAFX;;;;;;;ACAA;QAOE,0BACS,IACA,UACA;YAFA,OAAE,GAAF,EAAE;YACF,aAAQ,GAAR,QAAQ;YACR,eAAU,GAAV,UAAU;2BAkBC,IAAIU,iBAAY,EAAE;yBACpB,IAAIA,iBAAY,EAAE;YAjBhC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC;YAClC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC5C,EAAE,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC3C;;;;QAED,mCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBACtE;aACJ;;;;;QAUsC,oCAAS;;;;YAAhD,UAAiD,KAAS;gBACtD,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;oBACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBACtE;gBACD,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC7B,IAAG,IAAI,CAAC,WAAW,EAAE;oBACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACvC;aACJ;;;;QAEwB,kCAAO;;;YAAhC;gBACI,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;oBACnC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBACzE;gBACD,IAAG,IAAI,CAAC,WAAW,EAAE;oBACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACvC;aACJ;;oBA9CFR,cAAS,SAAC;wBACT,QAAQ,EAAE,aAAa;qBACxB;;;;;wBALmBP,eAAU;wBAAEC,cAAS;wBAChC,kBAAkB;;;;2BAsBxBG,UAAK,SAAC,WAAW;qCACjBA,UAAK,SAAC,gBAAgB;qCACtBA,UAAK,SAAC,gBAAgB;gCACtBA,UAAK,SAAC,WAAW;kCACjBA,UAAK,SAAC,aAAa;8BACnBc,WAAM;4BACNA,WAAM;gCAENa,iBAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;8BAWpCA,iBAAY,SAAC,SAAS;;+BA1CzB;;;;;;;ACAA;QAOE,2BACS,IACA,YACA;YAFA,OAAE,GAAF,EAAE;YACF,eAAU,GAAV,UAAU;YACV,aAAQ,GAAR,QAAQ;0BAiBE,IAAIhB,iBAAY,EAAE;2BACjB,IAAIA,iBAAY,EAAE;2BAClB,IAAIA,iBAAY,EAAE;0BACnB,IAAIA,iBAAY,EAAE;SAnBhC;;;;QAEL,oCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE;oBACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBAC5E;gBACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAChD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC7C;aACJ;;;;;QAYqC,oCAAQ;;;;YAA9C,UAA+C,KAAK;gBAChD,KAAK,CAAC,cAAc,EAAE,CAAC;aAC1B;;;;QAE0B,qCAAS;;;YAApC;gBACI,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBAC5E;gBACD,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACxC;aACJ;;;;QAE0B,qCAAS;;;YAApC;gBACI,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBAC/E;gBACD,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACxC;aACJ;;;;;QAEiC,gCAAI;;;;YAAtC,UAAuC,KAAK;gBACxC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAE5E,qBAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC;gBAC/C,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,EAAE;oBAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;oBACzG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;oBACnF,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE;wBAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;qBACxD;iBACJ;gBACD,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACvC;aACJ;;oBAlEFR,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;qBACzB;;;;;wBALmBP,eAAU;wBACrB,kBAAkB;wBADKC,cAAS;;;;2BAsBtCG,UAAK,SAAC,YAAY;sCAElBA,UAAK,SAAC,iBAAiB;2CACvBA,UAAK,SAAC,sBAAsB;mCAC5BA,UAAK,SAAC,cAAc;6BACpBc,WAAM;8BACNA,WAAM;8BACNA,WAAM;6BACNA,WAAM;+BAENa,iBAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;gCAInCA,iBAAY,SAAC,WAAW;gCASxBA,iBAAY,SAAC,WAAW;2BASxBA,iBAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;;gCAtDlC;;;;;;;ACAA;;;;;;QAqBS,2BAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,mBAAmB;oBAC7B,SAAS,EAAE,CAAC,kBAAkB,CAAC;iBAChC,CAAC;aACH;;oBAnBFvB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,gBAAgB;4BAChB,iBAAiB;yBAClB;wBACD,OAAO,EAAE;4BACP,gBAAgB;4BAChB,iBAAiB;yBAClB;qBACF;;kCAnBD;;;;;;;;;;;;ACAA;QAME,2BACS,IACA;YADA,OAAE,GAAF,EAAE;YACF,aAAQ,GAAR,QAAQ;;gCAOQ,IAAIM,iBAAY,EAAE;2BACvB,IAAIA,iBAAY,EAAE;yBACpB,IAAIA,iBAAY,EAAE;2BAChB,IAAIA,iBAAY,EAAE;2BAClB,IAAIA,iBAAY,EAAE;0BACnB,IAAIA,iBAAY,EAAE;SAXhC;;;;QAgBL,oCAAQ;;;YAAR;gBACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;iBACrB;aACJ;;;;QAED,8CAAkB;;;YAAlB;gBACI,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;;;;;;QAGsC,qCAAS;;;;YAAhD,UAAiD,KAAK;gBAClD,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC;gBAC1E,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;oBACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;iBACnE;gBAED,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACrD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACvC;;;;;QAEoC,mCAAO;;;;YAA5C,UAA6C,KAAK;gBAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;oBACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;iBACtE;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrC;;;;;;QAGqC,oCAAQ;;;;YAA9C,UAA+C,KAAS;gBACpD,KAAK,CAAC,cAAc,EAAE,CAAC;aAC1B;;;;;QAEsC,qCAAS;;;;YAAhD,UAAiD,KAAS;gBACtD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;oBACvC,IAAI,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;wBACxG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACjE;yBAAM;wBACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;qBAClE;iBACJ;gBACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACxD;;;;;QAEsC,qCAAS;;;;YAAhD,UAAiD,KAAS;gBACtD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;oBACvC,IAAI,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;wBACxG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACpE;yBAAM;wBACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;qBACnE;iBACJ;gBACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACxD;;;;;QAEiC,gCAAI;;;;YAAtC,UAAuC,KAAS;gBAC5C,KAAK,CAAC,cAAc,EAAE,CAAC;gBAEvB,qBAAI,MAAM,GAAW,KAAK,CAAC;gBAE3B,qBAAI,UAAU,GAAO,KAAK,CAAC,MAAM,CAAC;gBAClC,IAAI,UAAU,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC7C,OAAO,UAAU,CAAC,UAAU,KAAK,IAAI,EAAE;wBACnC,IAAI,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;4BACxD,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;4BACnC,MAAM,GAAG,IAAI,CAAC;4BACd,MAAM;yBACT;6BAAM;4BACH,UAAU,GAAG,UAAU,CAAC,UAAU,CAAA;yBACrC;qBACJ;iBACJ;qBAAM;oBACH,MAAM,GAAG,IAAI,CAAC;iBACjB;gBAED,IAAI,MAAM,EAAE;oBACR,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;wBACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBAClE;oBACD,qBAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACnC,qBAAI,WAAW,GAAG,UAAU,CAAC,kBAAkB,CAAC,CAAC;oBAEjD,IAAI,WAAW,GAAG,WAAW,EAAE;wBAC3B,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,GAAG,WAAW,EAAE;gCACrC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;6BAC3F;4BAED,IAAI,CAAC,KAAK,WAAW,EAAE;gCACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;6BACjG;yBACJ;qBACJ;yBAAM;wBACH,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,CAAC,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,EAAE;gCACrC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;6BAC3F;4BAED,IAAI,CAAC,KAAK,WAAW,EAAE;gCACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;6BACjG;yBACJ;qBACJ;oBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC;oBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,WAAW,aAAA,EAAE,WAAW,aAAA,EAAE,CAAC,CAAC;iBACxD;aACJ;;;;QAED,wCAAY;;;YAAZ;gBACI,KAAI,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;oBAChF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;oBACpF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAE3F,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;wBAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;qBACxF;iBACJ;aACJ;;;;;;;QAED,+CAAmB;;;;;;YAAnB,UAAoB,KAAS,EAAE,QAAe,EAAE,MAAc;gBAC1D,qBAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;gBACzC,OAAO,UAAU,KAAK,IAAI,EAAE;oBACxB,IAAI,UAAU,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;wBACpG,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;4BACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;yBAChD;6BAAM;4BACH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;yBACnD;wBACD,MAAM;qBACT;yBAAM;wBACH,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;qBACtC;iBACJ;aACJ;;oBA7JFR,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;qBACzB;;;;;wBAJmBP,eAAU;wBAAEC,cAAS;;;;2BAWtCG,UAAK,SAAC,YAAY;8BAClBA,UAAK,SAAC,WAAW;mCAGjBc,WAAM;8BACNA,WAAM;4BACNA,WAAM;8BACNA,WAAM;8BACNA,WAAM;6BACNA,WAAM;gCAgBNa,iBAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;8BAUpCA,iBAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;+BAQlCA,iBAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;gCAInCA,iBAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;gCAWpCA,iBAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;2BAWpCA,iBAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;;gCAhFlC;;;;;;;ACAA;;;;;;QAiBS,wBAAO;;;YAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,gBAAgB;oBAC1B,SAAS,EAAE,EAAE;iBACd,CAAC;aACH;;oBAjBFvB,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,iBAAiB;yBAClB;wBACD,OAAO,EAAE;4BACP,iBAAiB;yBAClB;qBACF;;+BAfD;;;;;;;;;;;;;;;;;ACAA,IAeA,qBAAM,UAAU,GAAG;QACf,oBAAoB;QACpB,oBAAoB;QACpB,oBAAoB;QACpB,qBAAqB;QACrB,qBAAqB;QACrB,sBAAsB;QACtB,mBAAmB;QACnB,cAAc;QACd,4BAA4B;QAC5B,WAAW;QACX,mBAAmB;QACnB,gBAAgB;KACnB,CAAC;;;;;;;;;;;;oBASDD,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACP,oBAAoB,CAAC,OAAO,EAAE;4BAC9B,oBAAoB,CAAC,OAAO,EAAE;4BAC9B,oBAAoB,CAAC,OAAO,EAAE;4BAC9B,qBAAqB,CAAC,OAAO,EAAE;4BAC/B,qBAAqB,CAAC,OAAO,EAAE;4BAC/B,sBAAsB,CAAC,OAAO,EAAE;4BAChC,mBAAmB,CAAC,OAAO,EAAE;4BAC7B,cAAc,CAAC,OAAO,EAAE;4BACxB,4BAA4B,CAAC,OAAO,EAAE;4BACtC,WAAW,CAAC,OAAO,EAAE;4BACrB,mBAAmB,CAAC,OAAO,EAAE;4BAC7B,gBAAgB,CAAC,OAAO,EAAE;yBAE3B;wBACD,OAAO,EAAE,UAAU;qBACpB;;2BAtDD;;;;;;;;QA8DS,uBAAO;;;YAAd;gBACE,OAAO,EAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC;aAChD;;oBAPFA,aAAQ,SAAC;wBACR,OAAO,EAAE,UAAU;wBACnB,OAAO,EAAE,UAAU;qBACpB;;8BA5DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
